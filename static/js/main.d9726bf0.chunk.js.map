{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sideNav/sideNav.js","components/introduction/introduction.js","components/callCenter/speechToText.js","components/callCenter/textToSpeech.js","components/callCenter/intentRecognition.js","components/callCenter/demo.js","components/callCenter/callCenter.js","components/shopNow/shopNow.js","components/csTrainer/csTrainer.js","components/crawlerManager/crawlerManager.js","components/spellingBee/hive.js","components/spellingBee/spellingBee.js","components/contact/contact.js","components/instructionSet/instructionSet.js","components/time/time.js","views/projectPage/projectPage.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","sideBackground","backgroundColor","minHeight","color","treeItemBoldLabel","fontWeight","palette","common","white","treeItemContent","height","treeItemLabel","treeItemNestedRoot","marginBottom","marginTop","treeItemRoot","treeViewRoot","padding","treeItemData","nodeId","label","start","end","nestedData","props","scrollPosition","classes","useState","expanded","setExpanded","useEffect","style","Grid","className","container","direction","justify","alignItems","TreeView","root","defaultCollapseIcon","KeyboardArrowDown","defaultExpandIcon","KeyboardArrowUp","map","row","TreeItem","content","clsx","selected","treeItemSelected","onClick","index","indexOf","splice","document","getElementById","scrollTo","top","scrollHeight","left","behavior","r","background","display","flexDirection","justifyContent","fontSize","textAlign","spacingSm","paddingLeft","spacing","paddingRight","spacingLg","useTheme","isSmScreen","useMediaQuery","breakpoints","down","fontFamily","fontStyle","backdrop","zIndex","drawer","black","cardRoot","width","overflowY","italic","tooltip","speechRes","setSpeechRes","listening","setListening","speechToText","a","speechConfig","sdk","fromSubscription","audioConfig","fromDefaultMicrophoneInput","recognizer","recognizeSpeechPromise","Promise","resolve","reject","recognizeOnceAsync","result","close","undefined","text","err","console","error","res","log","Backdrop","open","Typography","variant","item","Tooltip","title","placement","IconButton","aria-label","Mic","Card","CardContent","speaking","setSpeaking","setText","TextField","multiline","rows","onChange","event","target","value","fromDefaultSpeakerOutput","synthesizer","speakSsmlAsync","JSON","stringify","setTimeout","RecordVoiceOver","overflowX","intentString","setIntentString","fetch","json","luisRes","query","prediction","topIntent","intents","score","MenuOpen","setDisplayVideo","xs","md","Button","startIcon","ArrowBack","size","endIcon","OpenInNew","window","backgroundSm","paddingTop","paddingBottom","displayVideo","align","marginLeft","marginRight","src","frameBorder","allow","allowFullScreen","Link","rel","href","gutterBottom","type","autoPlay","loop","muted","playsInline","maxHeight","cellFill","cursor","fill","transition","cellLetter","textAnchor","textTransform","pointerEvents","hive","position","transform","hiveCell","outline","sbControls","maxWidth","sbHive","margin","sbHiveInput","letterSpacing","HiveCell","isCenter","tabIndex","letter","setLetter","focus","setFoucs","handleKeyDown","e","code","startsWith","slice","addEventListener","removeEventListener","onFocus","onBlur","autoFocus","border","viewBox","points","stroke","stroke-width","x","y","dy","strokeWidth","x1","y1","x2","y2","attributeName","from","to","dur","repeatCount","Hive","setResult","tooltipOpen","setTooltipOpen","letter1","setLetter1","letter2","setLetter2","letter3","setLetter3","letter4","setLetter4","letter5","setLetter5","letter6","setLetter6","letter7","setLetter7","solving","setSolving","handleTooltipClose","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","letters","toLowerCase","method","headers","body","centerLetter","response","data","ArrowForward","length","overflow","columnCount","listStyleType","word","CardActions","chipIcon","chipOutlined","borderColor","div","animate","opacity","rotate","zoom","duration","repeat","Infinity","transitionEnd","visibility","right","whileHover","scale","mainBackground","isBigScreen","up","setScrollPosition","handleScroll","scrollTop","passive","id","createMuiTheme","values","sm","lg","xl","default","level1","level2","paper","primary","light","main","dark","contrastText","secondary","disabled","hint","icon","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.d9726bf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport {\n    KeyboardArrowDown as KeyboardArrowDownIcon,\n    KeyboardArrowUp as KeyboardArrowUpIcon,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideBackground: {\n        backgroundColor: \"#121212\",\n        minHeight: \"100vh\",\n        color: \"rgba(255, 255, 255, 0.6)\",\n    },\n    treeItemBoldLabel: {\n        fontWeight: \"bold\",\n        color: theme.palette.common.white,\n    },\n    treeItemContent: {\n        \"&:hover\": {\n            color: theme.palette.common.white,\n        },\n        height: \"3.5em\",\n    },\n    treeItemLabel: {\n        backgroundColor: \"#121212 !important\",\n    },\n    treeItemNestedRoot: {\n        marginBottom: 16,\n        marginTop: 16,\n    },\n    treeItemRoot: {\n        marginBottom: 24,\n        \"&:first-child\": {\n            marginTop: 24,\n        },\n    },\n    treeViewRoot: {\n        padding: 24,\n        height: \"fit-content\",\n    },\n}));\n\nconst treeItemData = [\n    { nodeId: \"1\", label: \"Introduction\", start: 0, end: 1 / 11 },\n    {\n        nodeId: \"expandable\",\n        label: \"Coding Projects\",\n        nestedData: [\n            {\n                nodeId: \"2\",\n                label: \"Intelligent Call Center for Banks, Proof of Concept\",\n                start: 1 / 13,\n                end: 2 / 13,\n            },\n            {\n                nodeId: \"3\",\n                label: \"ShopNow E-commerce Platform\",\n                start: 2 / 13,\n                end: 6 / 13,\n            },\n            {\n                nodeId: \"4\",\n                label: \"Customer Service AI Trainer\",\n                start: 6 / 13,\n                end: 7 / 13,\n            },\n            {\n                nodeId: \"5\",\n                label: \"Crawler Manager\",\n                start: 7 / 13,\n                end: 8 / 13,\n            },\n            {\n                nodeId: \"6\",\n                label: \"Spelling Bee Solver\",\n                start: 8 / 13,\n                end: 10 / 13,\n            },\n        ],\n    },\n    {\n        nodeId: \"expandable2\",\n        label: \"Design and Technology\",\n        nestedData: [\n            {\n                nodeId: \"7\",\n                label: \"Instruction Set for Strangers\",\n                start: 10 / 13,\n                end: 11 / 13,\n            },\n            {\n                nodeId: \"8\",\n                label: \"Hourglass\",\n                start: 11 / 13,\n                end: 12 / 13,\n            },\n        ],\n    },\n    { nodeId: \"9\", label: \"Get in Touch\", start: 12 / 13, end: 1 },\n];\n\nexport default (props) => {\n    const { scrollPosition } = props;\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState([]);\n\n    useEffect(() => {\n        if (scrollPosition > 0.5 / 13 && scrollPosition < 9.5 / 13)\n            setExpanded([\"expandable\"]);\n        if (scrollPosition >= 9.5 / 13) setExpanded([\"expandable2\"]);\n    }, [scrollPosition]);\n\n    return (\n        <SimpleBar style={{ height: \"100vh\" }}>\n            <Grid\n                className={classes.sideBackground}\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"flex-start\"\n            >\n                <TreeView\n                    classes={{ root: classes.treeViewRoot }}\n                    defaultCollapseIcon={<KeyboardArrowDownIcon />}\n                    defaultExpandIcon={<KeyboardArrowUpIcon />}\n                    expanded={expanded}\n                >\n                    {treeItemData.map((row) => (\n                        <TreeItem\n                            key={row.nodeId}\n                            nodeId={row.nodeId}\n                            label={row.label}\n                            classes={{\n                                root: classes.treeItemRoot,\n                                content: classes.treeItemContent,\n                                label: clsx({\n                                    [classes.treeItemLabel]: true,\n                                    [classes.treeItemBoldLabel]:\n                                        scrollPosition > row.start - 0.05 &&\n                                        scrollPosition <= row.end - 0.05,\n                                }),\n                                selected: classes.treeItemSelected,\n                            }}\n                            onClick={() => {\n                                if (!row.nestedData) {\n                                    document\n                                        .getElementById(\"mainComponent\")\n                                        .scrollTo({\n                                            top:\n                                                row.start *\n                                                document.getElementById(\n                                                    \"mainComponent\"\n                                                ).scrollHeight,\n                                            left: 0,\n                                            behavior: \"smooth\",\n                                        });\n                                } else {\n                                    setExpanded((expanded) => {\n                                        if (row.nodeId === \"expandable\") {\n                                            const index =\n                                                expanded.indexOf(\"expandable\");\n                                            if (index > -1) {\n                                                expanded.splice(index, 1);\n                                                return [...expanded];\n                                            } else {\n                                                return [\"expandable\"];\n                                            }\n                                        } else if (\n                                            row.nodeId === \"expandable2\"\n                                        ) {\n                                            const index =\n                                                expanded.indexOf(\"expandable2\");\n                                            if (index > -1) {\n                                                expanded.splice(index, 1);\n                                                return [...expanded];\n                                            } else {\n                                                return [\"expandable2\"];\n                                            }\n                                        }\n                                    });\n                                }\n                            }}\n                        >\n                            {row.nestedData &&\n                                row.nestedData.map((r) => (\n                                    <TreeItem\n                                        key={r.nodeId}\n                                        classes={{\n                                            root: classes.treeItemNestedRoot,\n                                            content: classes.treeItemContent,\n                                            label: clsx({\n                                                [classes.treeItemLabel]: true,\n                                                [classes.treeItemBoldLabel]:\n                                                    scrollPosition >\n                                                        r.start - 0.05 &&\n                                                    scrollPosition <=\n                                                        r.end - 0.05,\n                                            }),\n                                            selected: classes.treeItemSelected,\n                                        }}\n                                        nodeId={r.nodeId}\n                                        label={r.label}\n                                        onClick={() => {\n                                            document\n                                                .getElementById(\"mainComponent\")\n                                                .scrollTo({\n                                                    top:\n                                                        r.start *\n                                                        document.getElementById(\n                                                            \"mainComponent\"\n                                                        ).scrollHeight,\n                                                    left: 0,\n                                                    behavior: \"smooth\",\n                                                });\n                                        }}\n                                    />\n                                ))}\n                        </TreeItem>\n                    ))}\n                </TreeView>\n            </Grid>\n        </SimpleBar>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Typography, useMediaQuery } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"calc(10px + 2vmin)\",\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n    },\n    spacingSm: {\n        paddingLeft: theme.spacing(4),\n        paddingRight: theme.spacing(4),\n    },\n    spacingLg: {\n        paddingLeft: theme.spacing(12),\n        paddingRight: theme.spacing(12),\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <div\n            className={clsx({\n                [classes.background]: true,\n                [classes.spacingSm]: isSmScreen,\n                [classes.spacingLg]: !isSmScreen,\n            })}\n        >\n            <h1>\n                <span\n                    style={{\n                        fontFamily: \"semplicitapro, sans-serif\",\n                        fontWeight: 700,\n                        fontStyle: \"italic\",\n                    }}\n                >\n                    Kevin\n                </span>{\" \"}\n                <span\n                    style={{\n                        fontFamily: \"recherche, sans-serif\",\n                        fontWeight: 400,\n                        fontStyle: \"normal\",\n                    }}\n                >\n                    (Huaigu)\n                </span>{\" \"}\n                <span\n                    style={{\n                        fontFamily: \"expo-serif-pro, serif\",\n                        fontWeight: 700,\n                        fontStyle: \"italic\",\n                    }}\n                >\n                    Lin\n                </span>\n            </h1>\n            <h3\n                style={{\n                    fontFamily: \"expo-serif-pro, serif\",\n                    fontWeight: 700,\n                    fontStyle: \"italic\",\n                }}\n            >\n                Not your ordinary full-stack engineer.\n            </h3>\n            <p\n                style={{\n                    fontFamily: \"semplicitapro, sans-serif\",\n                    fontWeight: 500,\n                    fontStyle: \"normal\",\n                }}\n            >\n                I create frontend, backend and mobile applications with React,\n                Node.js, Java, SQL and MongoDB. More importantly, I'm a strong\n                problem-solver who cares about user experience and design.\n            </p>\n            <p\n                style={{\n                    fontFamily: \"semplicitapro, sans-serif\",\n                    fontWeight: 700,\n                    fontStyle: \"italic\",\n                }}\n            >\n                Currently, I'm a student of the MFA Design and Technology\n                program at Parsons School of Design.\n            </p>\n            <p style={{ display: \"flex\", alignItems: \"center\" }}>\n                | <ArrowDownwardIcon fontSize=\"inherit\" /> Scroll down to see\n                sample projects |\n            </p>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Card,\n    CardContent,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { Mic as MicIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    cardRoot: {\n        width: 200,\n        height: 272,\n        overflowY: \"auto\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [speechRes, setSpeechRes] = useState();\n    const [listening, setListening] = useState(false);\n\n    const speechToText = async () => {\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\n            \"c87e54e21af94db4bbf766eec411f251\",\n            \"eastus\"\n        );\n        const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\n        const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\n        setListening(true);\n        const recognizeSpeechPromise = new Promise((resolve, reject) => {\n            recognizer.recognizeOnceAsync(\n                (result) => {\n                    recognizer.close();\n                    if (result.text === undefined) {\n                        reject(\"error in speech recognition\");\n                    }\n                    resolve(result.text);\n                },\n                (err) => {\n                    recognizer.close();\n                    console.error(err);\n                }\n            );\n        });\n        const res = await recognizeSpeechPromise;\n        console.log(res);\n        setSpeechRes(res);\n        setListening(false);\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Backdrop className={classes.backdrop} open={listening}>\n                <Typography variant=\"h1\" color=\"textPrimary\">\n                    Listening...\n                </Typography>\n            </Backdrop>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Speech Recognition:\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Record\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Record\"\n                        onClick={speechToText}\n                    >\n                        <MicIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <Card className={classes.cardRoot}>\n                    <CardContent>\n                        <Typography variant=\"body1\">{speechRes}</Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { RecordVoiceOver as RecordVoiceOverIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [speaking, setSpeaking] = useState(false);\n    const [text, setText] = useState();\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const textToSpeech = () => {\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\n            \"c87e54e21af94db4bbf766eec411f251\",\n            \"eastus\"\n        );\n        const audioConfig = sdk.AudioConfig.fromDefaultSpeakerOutput();\n        const synthesizer = new sdk.SpeechSynthesizer(\n            speechConfig,\n            audioConfig\n        );\n        synthesizer.speakSsmlAsync(\n            `<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n            xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"zh-CN\">\n          <voice name=\"en-US-AriaNeural\">\n            <mstts:express-as style=\"customerservice\">\n              ${text}\n            </mstts:express-as>\n          </voice>\n        </speak>`,\n            (result) => {\n                setSpeaking(true);\n                if (result) {\n                    console.log(JSON.stringify(result));\n                }\n                synthesizer.close();\n                setTimeout(() => {\n                    setSpeaking(false);\n                }, 5000);\n            },\n            (error) => {\n                console.log(error);\n                synthesizer.close();\n            }\n        );\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Backdrop className={classes.backdrop} open={speaking}>\n                <Typography variant=\"h1\" color=\"textPrimary\">\n                    Speaking...\n                </Typography>\n            </Backdrop>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Text to Speech:\n                </Typography>\n            </Grid>\n            <Grid item>\n                <TextField\n                    label=\"Enter Text Here\"\n                    multiline\n                    rows={12}\n                    variant=\"filled\"\n                    onChange={handleTextChange}\n                />\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Speak\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Speak\"\n                        onClick={textToSpeech}\n                    >\n                        <RecordVoiceOverIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Card,\n    CardContent,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { MenuOpen as MenuOpenIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    cardRoot: {\n        width: 216,\n        height: 200,\n        overflowX: \"auto\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [text, setText] = useState();\n    const [intentString, setIntentString] = useState();\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const recognizeIntent = () => {\n        fetch(\n            `https://westus.api.cognitive.microsoft.com/luis/prediction/v3.0/apps/bd2bf039-0fa0-4ca3-839a-4f47053e6fd2/slots/production/predict?subscription-key=a1c2ea07c42a4b528adfc341c38668d9&query=${text}`\n        )\n            .then((res) => res.json())\n            .then((luisRes) => {\n                console.log(luisRes);\n                setIntentString(`{\n    query: \"${luisRes.query}\",\n    topScoringIntent: {\n        intent: \"${luisRes.prediction.topIntent}\",\n        score: \"${\n            luisRes.prediction.intents[luisRes.prediction.topIntent].score\n        }\",\n    },\n}`);\n            });\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Intent Recognition (Yes or No):\n                </Typography>\n            </Grid>\n            <Grid item>\n                <TextField\n                    label=\"Enter Text Here\"\n                    variant=\"filled\"\n                    onChange={handleTextChange}\n                />\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Get Intent\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Get Intent\"\n                        onClick={recognizeIntent}\n                    >\n                        <MenuOpenIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <Card className={classes.cardRoot}>\n                    <CardContent>\n                        <pre>\n                            <code>{intentString}</code>\n                        </pre>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { Fragment } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport {\n    ArrowBack as ArrowBackIcon,\n    OpenInNew as OpenInNewIcon,\n} from \"@material-ui/icons\";\nimport SpeechRecognition from \"./speechToText\";\nimport TextToSpeech from \"./textToSpeech\";\nimport IntentRecognition from \"./intentRecognition\";\n\nexport default (props) => {\n    const { setDisplayVideo } = props;\n    return (\n        <Fragment>\n            <Grid item style={{ width: \"100%\" }}>\n                <Grid container justify=\"center\" spacing={2}>\n                    <Grid item xs={12} md={4}>\n                        <SpeechRecognition />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <TextToSpeech />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <IntentRecognition />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n                <Grid container justify=\"center\" spacing={4}>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<ArrowBackIcon fontSize=\"inherit\" />}\n                            size=\"large\"\n                            onClick={() => setDisplayVideo(true)}\n                        >\n                            Back to Video\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\n                            onClick={() => {\n                                window.open(\"https://www.xyici.com\", \"_blank\");\n                            }}\n                            size=\"large\"\n                        >\n                            View the Live Demo\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n};\n","import React, { useState, Fragment } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Grid,\n    Icon,\n    Link,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\nimport Demo from \"./demo\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [displayVideo, setDisplayVideo] = useState(true);\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\n                >\n                    <b>Intelligent Call Center for Banks, Proof of Concept</b>\n                </Typography>\n            </Grid>\n            {displayVideo ? (\n                <Fragment>\n                    <Grid item>\n                        <Grid container spacing={4} alignItems=\"center\">\n                            <Grid item xs={12} md={6}>\n                                <iframe\n                                    style={\n                                        isSmScreen\n                                            ? { marginLeft: 8, marginRight: 8 }\n                                            : { marginLeft: 16 }\n                                    }\n                                    width=\"100%\"\n                                    height={isSmScreen ? \"315\" : \"480\"}\n                                    src=\"https://www.youtube.com/embed/v6TqeO2SzT0\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    align=\"center\"\n                                    style={\n                                        isSmScreen\n                                            ? { marginLeft: 8, marginRight: 8 }\n                                            : { marginRight: 16 }\n                                    }\n                                >\n                                    <b>\n                                        Using <i>speech recognition</i>,{\" \"}\n                                        <i>text to speech</i>,{\" \"}\n                                        <i>intent recognition</i> and{\" \"}\n                                        <i>frontend animation</i> to showcase\n                                        the company's technical expertise in\n                                        building an intelligent call center\n                                    </b>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Type of Work: <i>professional</i>,{\" \"}\n                                    <i>independent</i>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Icons:{\" \"}\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://streamlineicons.com/\"\n                                        color=\"textSecondary\"\n                                    >\n                                        Streamline Icons\n                                        <OpenInNewIcon\n                                            color=\"inherit\"\n                                            fontSize=\"inherit\"\n                                        />\n                                    </Link>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Speech Services:{\" \"}\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://azure.microsoft.com/en-us/services/cognitive-services/speech-services/\"\n                                        color=\"textSecondary\"\n                                    >\n                                        Microsoft Azure\n                                        <OpenInNewIcon\n                                            color=\"inherit\"\n                                            fontSize=\"inherit\"\n                                        />\n                                    </Link>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item style={{ width: \"100%\" }}>\n                        <Grid container justify=\"center\" spacing={4}>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    endIcon={\n                                        <OpenInNewIcon fontSize=\"inherit\" />\n                                    }\n                                    onClick={() => {\n                                        window.open(\n                                            \"https://youtu.be/v6TqeO2SzT0\",\n                                            \"_blank\"\n                                        );\n                                    }}\n                                    size=\"large\"\n                                >\n                                    View on YouTube\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    size=\"large\"\n                                    onClick={() => setDisplayVideo(false)}\n                                >\n                                    Try It Yourself!\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Fragment>\n            ) : (\n                <Demo setDisplayVideo={setDisplayVideo} />\n            )}\n        </Grid>\n    );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                        <b>ShopNow E-commerce Platform</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={4}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                <b>\n                                    A one-stop platform solution that helps\n                                    international businesses launch and manage\n                                    e-commerce activities in the Chinese market\n                                </b>\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Type of Work: <i>professional</i>, <i>team</i>\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Designer: Felix Wang\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Co-developer: Chenjie Wang\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={8}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : {}\n                                }\n                            >\n                                Interactive Map:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/interactive_map.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : {}\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                SMS Template Generator:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/Template.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                This form contains many tools that help users\n                                easily generate SMS marketing contents that\n                                follow regulators' rules\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                SUBMIT button submits the template application\n                                to multiple SMS service providers and redirects\n                                to an application status page, where user can\n                                monitor the status of the application\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                WeChat Public Account Message Generator:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/welcome_message.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                WeChat Public Account is an important eCommerce\n                                marketing channel in the Chinese market\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                This form helps users generate WeChat Public\n                                Account messages with materials they uploaded\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                Users can choose many content types, as well as\n                                visualize the message simultaneously when they\n                                are filling out the form\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={7}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                Sales and Marketing Data Visulization:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/data_visulization_2.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                Charts, tables and cards that help users track\n                                sales data and monitor effectiveness of\n                                marketing campaigns\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Link, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                    <b>Customer Service AI Trainer</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={4}>\n                        <video\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/customer_service_ai_trainer_demo.mp4\"\n                            type=\"video/mp4\"\n                            autoPlay\n                            loop\n                            width=\"100%\"\n                            muted\n                            playsInline\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16, maxHeight: 540 }\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>\n                                An Android native APP that trains customer\n                                service agents on how to talk to customers.{\" \"}\n                                <i>Speech recognition</i> is used to recognize\n                                users' voice. A custom <i>NLP module</i> is used\n                                to mimic customers' questions, score customer\n                                service agents' answers and give out standard\n                                answers\n                            </b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>professional</i>,{\" \"}\n                            <i>independent</i>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Speech Recognition:{\" \"}\n                            <Link\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://www.xfyun.cn/services/voicedictation\"\n                                color=\"textSecondary\"\n                            >\n                                Xunfei Cloud\n                                <OpenInNewIcon\n                                    color=\"inherit\"\n                                    fontSize=\"inherit\"\n                                />\n                            </Link>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            NLP Module: Zhijue Information\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                    <b>Crawler Manager</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={7}>\n                        <video\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/crawler_manager.mp4\"\n                            type=\"video/mp4\"\n                            autoPlay\n                            loop\n                            width=\"100%\"\n                            muted\n                            playsInline\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16 }\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>\n                                A company internal tool to help users launch and\n                                monitor crawler tasks without any programming\n                            </b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>professional</i>,{\" \"}\n                            <i>independent</i>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Backdrop,\n    Button,\n    ClickAwayListener,\n    Grid,\n    Tooltip,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    cellFill: {\n        cursor: \"pointer\",\n        fill: \"#e6e6e6\",\n        transition: \"all 100ms\",\n    },\n    cellLetter: {\n        fontWeight: 700,\n        fontSize: 30,\n        textAnchor: \"middle\",\n        textTransform: \"uppercase\",\n        pointerEvents: \"none\",\n    },\n    hive: {\n        position: \"relative\",\n        width: \"100%\",\n        paddingBottom: \"103.92305%\",\n        \"& div:nth-child(1)\": {\n            transform: \"translate(0, 0)\",\n            \"& polygon\": {\n                fill: \"#f8cd05\",\n            },\n        },\n        \"& div:nth-child(2)\": {\n            transform: \"translate(-75%, -50%)\",\n        },\n        \"& div:nth-child(3)\": {\n            transform: \"translate(0, -100%)\",\n        },\n        \"& div:nth-child(4)\": {\n            transform: \"translate(75%, -50%)\",\n        },\n        \"& div:nth-child(5)\": {\n            transform: \"translate(75%, 50%)\",\n        },\n        \"& div:nth-child(6)\": {\n            transform: \"translate(0, 100%)\",\n        },\n        \"& div:nth-child(7)\": {\n            transform: \"translate(-75%, 50%)\",\n        },\n    },\n    hiveCell: {\n        position: \"absolute\",\n        top: \"calc(100% / 3)\",\n        left: \"30%\",\n        width: \"40%\",\n        height: \"calc(100% / 3)\",\n        outline: \"none\",\n    },\n    sbControls: {\n        width: \"90vw\",\n        maxWidth: 290,\n    },\n    sbHive: {\n        width: \"90%\",\n        margin: \"25px auto\",\n    },\n    sbHiveInput: {\n        textTransform: \"uppercase\",\n        fontSize: 32,\n        fontWeight: 700,\n        letterSpacing: 0.5,\n        color: theme.palette.common.white,\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nconst HiveCell = (props) => {\n    const classes = useStyles();\n    const { className, isCenter, tabIndex, letter, setLetter } = props;\n    const [focus, setFoucs] = useState(false);\n\n    useEffect(() => {\n        if (focus) {\n            const handleKeyDown = (e) => {\n                if (e.code.startsWith(\"Key\")) {\n                    setLetter(e.code.slice(3));\n                } else if (e.code === \"Backspace\") {\n                    setLetter(null);\n                }\n            };\n            document.addEventListener(\"keydown\", handleKeyDown);\n\n            return function cleanup() {\n                document.removeEventListener(\"keydown\", handleKeyDown);\n            };\n        }\n    }, [focus]);\n\n    return (\n        <div\n            onFocus={() => {\n                setFoucs(true);\n            }}\n            onBlur={() => {\n                setFoucs(false);\n            }}\n            className={classes.hiveCell}\n            tabIndex={tabIndex}\n        >\n            {focus && (\n                <input\n                    type='text'\n                    autoFocus\n                    tabIndex={tabIndex}\n                    style={{\n                        position: \"absolute\",\n                        height: 0,\n                        padding: \"unset\",\n                        margin: \"unset\",\n                        border: \"none\",\n                    }}\n                />\n            )}\n            <svg viewBox='0 0 120 103.92304845413263'>\n                <polygon\n                    className={classes.cellFill}\n                    points='0,51.96152422706631 30,0 90,0 120,51.96152422706631 90,103.92304845413263 30,103.92304845413263'\n                    stroke='#282c34'\n                    stroke-width='7.5'\n                />\n                <text\n                    className={classes.cellLetter}\n                    x='50%'\n                    y='50%'\n                    dy='10.75%'\n                >\n                    {letter}\n                </text>\n                {focus && (\n                    <line\n                        strokeWidth='3'\n                        x1={letter ? \"75\" : \"50\"}\n                        y1='25'\n                        x2={letter ? \"75\" : \"50\"}\n                        y2='75'\n                        stroke={isCenter ? \"black\" : \"#f8cd05\"}\n                    >\n                        <animate\n                            attributeName='display'\n                            from='block'\n                            to='none'\n                            dur='1s'\n                            repeatCount='indefinite'\n                        />\n                    </line>\n                )}\n            </svg>\n        </div>\n    );\n};\n\nconst Hive = (props) => {\n    const { setResult } = props;\n    const classes = useStyles();\n    const [tooltipOpen, setTooltipOpen] = useState(false);\n    const [letter1, setLetter1] = useState(null);\n    const [letter2, setLetter2] = useState(null);\n    const [letter3, setLetter3] = useState(null);\n    const [letter4, setLetter4] = useState(null);\n    const [letter5, setLetter5] = useState(null);\n    const [letter6, setLetter6] = useState(null);\n    const [letter7, setLetter7] = useState(null);\n    const [solving, setSolving] = useState(false);\n\n    const handleTooltipClose = () => {\n        setTooltipOpen(false);\n    };\n\n    const handleTooltipOpen = () => {\n        setTooltipOpen(true);\n    };\n\n    return (\n        <Grid\n            container\n            // direction=\"column\"\n            justify='center'\n            alignItems='center'\n            className={classes.sbControls}\n            spacing={2}\n        >\n            <Backdrop className={classes.backdrop} open={solving}>\n                <Typography variant='h1' color='textPrimary'>\n                    Solving...\n                </Typography>\n            </Backdrop>\n            <Grid item xs={12} className={classes.sbHive}>\n                <div className={classes.hive}>\n                    <HiveCell\n                        isCenter\n                        tabIndex='1'\n                        letter={letter1}\n                        setLetter={setLetter1}\n                    />\n                    <HiveCell\n                        tabIndex='2'\n                        letter={letter2}\n                        setLetter={setLetter2}\n                    />\n                    <HiveCell\n                        tabIndex='3'\n                        letter={letter3}\n                        setLetter={setLetter3}\n                    />\n                    <HiveCell\n                        tabIndex='4'\n                        letter={letter4}\n                        setLetter={setLetter4}\n                    />\n                    <HiveCell\n                        tabIndex='5'\n                        letter={letter5}\n                        setLetter={setLetter5}\n                    />\n                    <HiveCell\n                        tabIndex='6'\n                        letter={letter6}\n                        setLetter={setLetter6}\n                    />\n                    <HiveCell\n                        tabIndex='7'\n                        letter={letter7}\n                        setLetter={setLetter7}\n                    />\n                </div>\n            </Grid>\n            <Grid\n                item\n                xs={12}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n                <ClickAwayListener onClickAway={handleTooltipClose}>\n                    <Tooltip\n                        PopperProps={{\n                            disablePortal: true,\n                        }}\n                        onClose={handleTooltipClose}\n                        open={tooltipOpen}\n                        disableFocusListener\n                        disableHoverListener\n                        disableTouchListener\n                        title='Oops! Fill out all letters first...'\n                        placement='top'\n                        classes={{ tooltip: classes.tooltip }}\n                    >\n                        <Button\n                            tabIndex='8'\n                            variant='contained'\n                            color='primary'\n                            size='large'\n                            onClick={() => {\n                                if (\n                                    !letter1 ||\n                                    !letter2 ||\n                                    !letter3 ||\n                                    !letter4 ||\n                                    !letter5 ||\n                                    !letter6 ||\n                                    !letter7\n                                ) {\n                                    handleTooltipOpen();\n                                } else {\n                                    setSolving(true);\n                                    let letters =\n                                        letter1 +\n                                        letter2 +\n                                        letter3 +\n                                        letter4 +\n                                        letter5 +\n                                        letter6 +\n                                        letter7;\n                                    letters = letters.toLowerCase();\n                                    fetch(\n                                        \"https://personal-website-spelling-bee-backend.com/backend/findWords\",\n                                        {\n                                            method: \"POST\",\n                                            headers: {\n                                                \"Content-Type\":\n                                                    \"application/json\",\n                                            },\n                                            body: JSON.stringify({\n                                                letters: letters,\n                                                centerLetter:\n                                                    letter1.toLowerCase(),\n                                            }),\n                                        }\n                                    )\n                                        .then((response) => response.json())\n                                        .then((data) => {\n                                            setSolving(false);\n                                            setResult(data);\n                                            document\n                                                .getElementById(\"mainComponent\")\n                                                .scrollTo({\n                                                    top:\n                                                        (9 / 13) *\n                                                        document.getElementById(\n                                                            \"mainComponent\"\n                                                        ).scrollHeight,\n                                                    left: 0,\n                                                    behavior: \"smooth\",\n                                                });\n                                        });\n                                }\n                            }}\n                        >\n                            let me solve it for you!\n                        </Button>\n                    </Tooltip>\n                </ClickAwayListener>\n            </Grid>\n            <Grid\n                item\n                xs={12}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n                <Button\n                    variant='outlined'\n                    color='primary'\n                    endIcon={<OpenInNewIcon fontSize='inherit' />}\n                    onClick={() => {\n                        window.open(\n                            \"https://www.nytimes.com/puzzles/spelling-bee\",\n                            \"_blank\"\n                        );\n                    }}\n                    size='large'\n                >\n                    check today's puzzle on new york times\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Hive;\n","import React, { Fragment, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Grid,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport Hive from \"./hive\";\nimport {\n    ArrowDownward as ArrowDownwardIcon,\n    ArrowForward as ArrowForwardIcon,\n    OpenInNew as OpenInNewIcon,\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n    cardRoot: {\n        width: \"100%\",\n        height: \"70vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [result, setResult] = useState([]);\n\n    return (\n        <Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Typography\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        align=\"center\"\n                        style={\n                            isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}\n                        }\n                    >\n                        <b>New York Times Spelling Bee Solver</b>\n                    </Typography>\n                </Grid>\n                <Grid item style={{ width: \"100%\" }}>\n                    <Grid\n                        container\n                        spacing={4}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                    >\n                        <Grid\n                            item\n                            xs={12}\n                            md={6}\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                flexDirection: \"column\",\n                            }}\n                        >\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                <b>\n                                    A tool to solve New York Times' Spelling Bee\n                                    puzzle. Just because I don't like to do it\n                                    by hand\n                                </b>\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Type of Work: <i>recreational</i>,{\" \"}\n                                <i>independent</i>\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                | Enter letters in the hive{\" \"}\n                                {isSmScreen ? (\n                                    <ArrowDownwardIcon fontSize=\"inherit\" />\n                                ) : (\n                                    <ArrowForwardIcon fontSize=\"inherit\" />\n                                )}{\" \"}\n                                |\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                            xs={12}\n                            md={6}\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                // flexDirection: \"column\",\n                            }}\n                        >\n                            <Hive setResult={setResult} />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item xs={12} md={6}>\n                    <Card\n                        className={classes.cardRoot}\n                        variant=\"outlined\"\n                        style={\n                            isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}\n                        }\n                    >\n                        <CardContent style={{ height: \"80%\" }}>\n                            <Typography\n                                className={classes.title}\n                                color=\"textSecondary\"\n                                gutterBottom\n                            >\n                                I have found {result.length} word for you\n                            </Typography>\n                            <div\n                                style={{\n                                    height: \"100%\",\n                                    overflow: \"auto\",\n                                }}\n                            >\n                                <ul\n                                    style={{\n                                        columnCount: 3,\n                                        listStyleType: \"none\",\n                                    }}\n                                >\n                                    {result.length > 0 &&\n                                        result.map((word, index) => (\n                                            <li key={index}>\n                                                <Typography variant=\"body1\">\n                                                    {word}\n                                                </Typography>\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n                        </CardContent>\n                        <CardActions>\n                            <Button\n                                size=\"small\"\n                                variant=\"outlined\"\n                                endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\n                                onClick={() => {\n                                    window.open(\n                                        \"https://github.com/huaigulin/NYTimes_Spelling_Bee_Solver\",\n                                        \"_blank\"\n                                    );\n                                }}\n                            >\n                                check my algorithm\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Chip, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"calc(10px + 2vmin)\",\n        color: \"white\",\n    },\n    chipIcon: {\n        marginLeft: \"-4px !important\",\n    },\n    chipOutlined: {\n        color: theme.palette.common.white,\n        borderColor: theme.palette.common.white,\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    // const controls = useAnimation();\n    // const controls2 = useAnimation();\n    // const controls3 = useAnimation();\n\n    return (\n        <div className={classes.background}>\n            <h1>Get in Touch</h1>\n            <p>huaigu.lin@hotmail.com</p>\n            <Grid container justify=\"center\">\n                <Typography variant=\"body1\" style={{ position: \"relative\" }}>\n                    This website is built with React.js and\n                    <motion.div\n                        animate={{\n                            x: 64,\n                            y: -64,\n                            opacity: 0,\n                            rotate: 30,\n                            zoom: 2,\n                            transition: {\n                                duration: 3,\n                                repeat: Infinity,\n                            },\n                            transitionEnd: { visibility: \"hidden\" },\n                        }}\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\n                    >\n                        <FavoriteIcon color=\"secondary\" />\n                    </motion.div>\n                    <motion.div\n                        animate={{\n                            x: -48,\n                            y: -48,\n                            opacity: 0,\n                            rotate: -45,\n                            transition: {\n                                duration: 3,\n                                repeat: Infinity,\n                            },\n                            transitionEnd: { visibility: \"hidden\" },\n                        }}\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\n                    >\n                        <FavoriteIcon color=\"secondary\" />\n                    </motion.div>\n                    <motion.div\n                        animate={{\n                            y: -72,\n                            opacity: 0,\n                            rotate: -5,\n                            zoom: 1.5,\n                            transition: {\n                                duration: 3,\n                                repeat: Infinity,\n                            },\n                            transitionEnd: { visibility: \"hidden\" },\n                        }}\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\n                    >\n                        <FavoriteIcon color=\"secondary\" />\n                    </motion.div>\n                    <motion.div\n                        whileHover={{ scale: 1.2 }}\n                        style={{ display: \"inline-block\" }}\n                    >\n                        <IconButton\n                            aria-label=\"like\"\n                            color=\"secondary\"\n                            fontSize=\"large\"\n                        >\n                            <FavoriteIcon />\n                        </IconButton>\n                    </motion.div>\n                </Typography>\n            </Grid>\n        </div>\n    );\n};\n","import React, { useState, Fragment } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Grid,\n    Icon,\n    Link,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\n                >\n                    <b>Instruction Set for Strangers</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={7}>\n                        <iframe\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16 }\n                            }\n                            width=\"100%\"\n                            height={isSmScreen ? \"315\" : \"480\"}\n                            src=\"https://www.youtube.com/embed/y5e17zLZ26k\"\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>\n                                How to make an installation and get strangers to\n                                interact with it <i>without using any text</i>?\n                            </b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>school project</i>, <i>team</i>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Teammate: Tricia Ilena\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Location:{\" \"}\n                            <Link\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://goo.gl/maps/STaZkdQ2Fe89q62w9\"\n                                color=\"textSecondary\"\n                            >\n                                Pier I, Riverside Park South, New York, NY\n                                <OpenInNewIcon\n                                    color=\"inherit\"\n                                    fontSize=\"inherit\"\n                                />\n                            </Link>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState, Fragment } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Grid,\n    Icon,\n    Link,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\n                >\n                    <b>Hourglass</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>An hourglass drawing in p5.js</b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>school project</i>,{\" \"}\n                            <i>independent</i>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <iframe\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16 }\n                            }\n                            width={400}\n                            height={400}\n                            src=\"https://preview.p5js.org/kevin.lin/embed/fIecHbPqB\"\n                            frameBorder=\"0\"\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport SideNavigation from \"../../components/sideNav/sideNav\";\nimport Introduction from \"../../components/introduction/introduction\";\nimport CallCenterDemo from \"../../components/callCenter/callCenter\";\nimport ShopNow from \"../../components/shopNow/shopNow\";\nimport CsTrainer from \"../../components/csTrainer/csTrainer\";\nimport CrawlerManager from \"../../components/crawlerManager/crawlerManager\";\nimport SpellingBee from \"../../components/spellingBee/spellingBee\";\nimport Contact from \"../../components/contact/contact\";\nimport InstructionSet from \"../../components/instructionSet/instructionSet\";\nimport Time from \"../../components/time/time\";\n\nconst useStyles = makeStyles({\n    mainBackground: {\n        backgroundColor: \"#282c34\",\n        height: \"100vh\",\n        overflowY: \"auto\",\n        width: \"100%\",\n    },\n});\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isBigScreen = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const handleScroll = () => {\n        const position =\n            document.getElementById(\"mainComponent\").scrollTop /\n            document.getElementById(\"mainComponent\").scrollHeight;\n        setScrollPosition(position);\n    };\n    console.log(scrollPosition);\n\n    useEffect(() => {\n        document\n            .getElementById(\"mainComponent\")\n            .addEventListener(\"scroll\", handleScroll, { passive: true });\n\n        return () => {\n            document\n                .getElementById(\"mainComponent\")\n                .removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    // console.log(scrollPosition);\n\n    return (\n        <Grid container>\n            {isBigScreen && (\n                <Grid item md={3}>\n                    <SideNavigation scrollPosition={scrollPosition} />\n                </Grid>\n            )}\n            <Grid item xs={12} md={9}>\n                <div id=\"mainComponent\" className={classes.mainBackground}>\n                    <Introduction />\n                    <CallCenterDemo />\n                    <ShopNow />\n                    <CsTrainer />\n                    <CrawlerManager />\n                    <SpellingBee />\n                    <InstructionSet />\n                    <Time />\n                    <Contact />\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ProjectPage from \"./views/projectPage/projectPage\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n    palette: {\n        background: {\n            default: \"#121212\",\n            level1: \"#212121\",\n            level2: \"#333\",\n            paper: \"#424242\",\n        },\n        common: {\n            black: \"#000\",\n            white: \"#fff\",\n        },\n        primary: {\n            light: \"#80d6ff\",\n            main: \"#42a5f5\",\n            dark: \"#0077c2\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff77a9\",\n            main: \"#ec407a\",\n            dark: \"#b4004e\",\n            contrastText: \"#fff\",\n        },\n        text: {\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\",\n            primary: \"#fff\",\n            secondary: \"rgba(255, 255, 255, 0.7)\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <ProjectPage />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}