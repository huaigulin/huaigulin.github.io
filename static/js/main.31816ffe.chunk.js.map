{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sideNav/sideNav.js","components/introduction/introduction.js","components/callCenter/speechToText.js","components/callCenter/textToSpeech.js","components/callCenter/intentRecognition.js","components/callCenter/demo.js","components/callCenter/callCenter.js","components/shopNow/shopNow.js","components/csTrainer/csTrainer.js","components/crawlerManager/crawlerManager.js","components/spellingBee/hive.js","components/spellingBee/spellingBee.js","components/contact/contact.js","components/instructionSet/instructionSet.js","components/time/time.js","views/projectPage/projectPage.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","sideBackground","backgroundColor","minHeight","color","treeItemBoldLabel","fontWeight","palette","common","white","treeItemContent","height","treeItemLabel","treeItemNestedRoot","marginBottom","marginTop","treeItemRoot","treeViewRoot","padding","treeItemData","nodeId","label","start","end","nestedData","props","scrollPosition","classes","useState","expanded","setExpanded","useEffect","style","Grid","className","container","direction","justify","alignItems","TreeView","root","defaultCollapseIcon","KeyboardArrowDown","defaultExpandIcon","KeyboardArrowUp","map","row","TreeItem","content","clsx","selected","treeItemSelected","onClick","index","indexOf","splice","document","getElementById","scrollTo","top","scrollHeight","left","behavior","r","background","display","flexDirection","justifyContent","fontSize","textAlign","spacingSm","paddingLeft","spacing","paddingRight","spacingLg","useTheme","isSmScreen","useMediaQuery","breakpoints","down","backdrop","zIndex","drawer","black","cardRoot","width","overflowY","italic","fontStyle","tooltip","speechRes","setSpeechRes","listening","setListening","speechToText","a","speechConfig","sdk","fromSubscription","audioConfig","fromDefaultMicrophoneInput","recognizer","recognizeSpeechPromise","Promise","resolve","reject","recognizeOnceAsync","result","close","undefined","text","err","console","error","res","log","Backdrop","open","Typography","variant","item","Tooltip","title","placement","IconButton","aria-label","Mic","Card","CardContent","speaking","setSpeaking","setText","TextField","multiline","rows","onChange","event","target","value","fromDefaultSpeakerOutput","synthesizer","speakSsmlAsync","JSON","stringify","setTimeout","RecordVoiceOver","overflowX","intentString","setIntentString","fetch","json","luisRes","query","prediction","topIntent","intents","score","MenuOpen","setDisplayVideo","xs","md","Button","startIcon","ArrowBack","size","endIcon","OpenInNew","window","backgroundSm","paddingTop","paddingBottom","displayVideo","align","marginLeft","marginRight","src","frameBorder","allow","allowFullScreen","Link","rel","href","gutterBottom","type","autoPlay","loop","muted","playsInline","maxHeight","cellFill","cursor","fill","transition","cellLetter","textAnchor","textTransform","pointerEvents","hive","position","transform","hiveCell","outline","sbControls","maxWidth","sbHive","margin","sbHiveInput","letterSpacing","HiveCell","isCenter","tabIndex","letter","setLetter","focus","setFoucs","handleKeyDown","e","code","startsWith","slice","addEventListener","removeEventListener","onFocus","onBlur","autoFocus","border","viewBox","points","stroke","stroke-width","x","y","dy","strokeWidth","x1","y1","x2","y2","attributeName","from","to","dur","repeatCount","Hive","setResult","tooltipOpen","setTooltipOpen","letter1","setLetter1","letter2","setLetter2","letter3","setLetter3","letter4","setLetter4","letter5","setLetter5","letter6","setLetter6","letter7","setLetter7","solving","setSolving","handleTooltipClose","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","letters","toLowerCase","method","headers","body","centerLetter","response","data","ArrowForward","length","overflow","columnCount","listStyleType","word","CardActions","chipIcon","chipOutlined","borderColor","div","animate","opacity","rotate","zoom","duration","repeat","Infinity","transitionEnd","visibility","right","whileHover","scale","mainBackground","isBigScreen","up","setScrollPosition","handleScroll","scrollTop","passive","id","createMuiTheme","values","sm","lg","xl","default","level1","level2","paper","primary","light","main","dark","contrastText","secondary","disabled","hint","icon","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.31816ffe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\r\nimport {\r\n    KeyboardArrowDown as KeyboardArrowDownIcon,\r\n    KeyboardArrowUp as KeyboardArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"simplebar/dist/simplebar.min.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sideBackground: {\r\n        backgroundColor: \"#121212\",\r\n        minHeight: \"100vh\",\r\n        color: \"rgba(255, 255, 255, 0.6)\",\r\n    },\r\n    treeItemBoldLabel: {\r\n        fontWeight: \"bold\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    treeItemContent: {\r\n        \"&:hover\": {\r\n            color: theme.palette.common.white,\r\n        },\r\n        height: \"3.5em\",\r\n    },\r\n    treeItemLabel: {\r\n        backgroundColor: \"#121212 !important\",\r\n    },\r\n    treeItemNestedRoot: {\r\n        marginBottom: 16,\r\n        marginTop: 16,\r\n    },\r\n    treeItemRoot: {\r\n        marginBottom: 24,\r\n        \"&:first-child\": {\r\n            marginTop: 24,\r\n        },\r\n    },\r\n    treeViewRoot: {\r\n        padding: 24,\r\n        height: \"fit-content\",\r\n    },\r\n}));\r\n\r\nconst treeItemData = [\r\n    { nodeId: \"1\", label: \"Introduction\", start: 0, end: 1 / 11 },\r\n    {\r\n        nodeId: \"expandable\",\r\n        label: \"Coding Projects\",\r\n        nestedData: [\r\n            {\r\n                nodeId: \"2\",\r\n                label: \"Intelligent Call Center for Banks, Proof of Concept\",\r\n                start: 1 / 13,\r\n                end: 2 / 13,\r\n            },\r\n            {\r\n                nodeId: \"3\",\r\n                label: \"ShopNow E-commerce Platform\",\r\n                start: 2 / 13,\r\n                end: 6 / 13,\r\n            },\r\n            {\r\n                nodeId: \"4\",\r\n                label: \"Customer Service AI Trainer\",\r\n                start: 6 / 13,\r\n                end: 7 / 13,\r\n            },\r\n            {\r\n                nodeId: \"5\",\r\n                label: \"Crawler Manager\",\r\n                start: 7 / 13,\r\n                end: 8 / 13,\r\n            },\r\n            {\r\n                nodeId: \"6\",\r\n                label: \"Spelling Bee Solver\",\r\n                start: 8 / 13,\r\n                end: 10 / 13,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        nodeId: \"expandable2\",\r\n        label: \"Design and Technology\",\r\n        nestedData: [\r\n            {\r\n                nodeId: \"7\",\r\n                label: \"Instruction Set for Strangers\",\r\n                start: 10 / 13,\r\n                end: 11 / 13,\r\n            },\r\n            {\r\n                nodeId: \"8\",\r\n                label: \"Hourglass\",\r\n                start: 11 / 13,\r\n                end: 12 / 13,\r\n            },\r\n        ],\r\n    },\r\n    { nodeId: \"9\", label: \"Get in Touch\", start: 12 / 13, end: 1 },\r\n];\r\n\r\nexport default (props) => {\r\n    const { scrollPosition } = props;\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (scrollPosition > 0.5 / 13 && scrollPosition < 9.5 / 13)\r\n            setExpanded([\"expandable\"]);\r\n        if (scrollPosition >= 9.5 / 13) setExpanded([\"expandable2\"]);\r\n    }, [scrollPosition]);\r\n\r\n    return (\r\n        <SimpleBar style={{ height: \"100vh\" }}>\r\n            <Grid\r\n                className={classes.sideBackground}\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <TreeView\r\n                    classes={{ root: classes.treeViewRoot }}\r\n                    defaultCollapseIcon={<KeyboardArrowDownIcon />}\r\n                    defaultExpandIcon={<KeyboardArrowUpIcon />}\r\n                    expanded={expanded}\r\n                >\r\n                    {treeItemData.map((row) => (\r\n                        <TreeItem\r\n                            key={row.nodeId}\r\n                            nodeId={row.nodeId}\r\n                            label={row.label}\r\n                            classes={{\r\n                                root: classes.treeItemRoot,\r\n                                content: classes.treeItemContent,\r\n                                label: clsx({\r\n                                    [classes.treeItemLabel]: true,\r\n                                    [classes.treeItemBoldLabel]:\r\n                                        scrollPosition > row.start - 0.05 &&\r\n                                        scrollPosition <= row.end - 0.05,\r\n                                }),\r\n                                selected: classes.treeItemSelected,\r\n                            }}\r\n                            onClick={() => {\r\n                                if (!row.nestedData) {\r\n                                    document\r\n                                        .getElementById(\"mainComponent\")\r\n                                        .scrollTo({\r\n                                            top:\r\n                                                row.start *\r\n                                                document.getElementById(\r\n                                                    \"mainComponent\"\r\n                                                ).scrollHeight,\r\n                                            left: 0,\r\n                                            behavior: \"smooth\",\r\n                                        });\r\n                                } else {\r\n                                    setExpanded((expanded) => {\r\n                                        if (row.nodeId === \"expandable\") {\r\n                                            const index =\r\n                                                expanded.indexOf(\"expandable\");\r\n                                            if (index > -1) {\r\n                                                expanded.splice(index, 1);\r\n                                                return [...expanded];\r\n                                            } else {\r\n                                                return [\"expandable\"];\r\n                                            }\r\n                                        } else if (\r\n                                            row.nodeId === \"expandable2\"\r\n                                        ) {\r\n                                            const index =\r\n                                                expanded.indexOf(\"expandable2\");\r\n                                            if (index > -1) {\r\n                                                expanded.splice(index, 1);\r\n                                                return [...expanded];\r\n                                            } else {\r\n                                                return [\"expandable2\"];\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }}\r\n                        >\r\n                            {row.nestedData &&\r\n                                row.nestedData.map((r) => (\r\n                                    <TreeItem\r\n                                        key={r.nodeId}\r\n                                        classes={{\r\n                                            root: classes.treeItemNestedRoot,\r\n                                            content: classes.treeItemContent,\r\n                                            label: clsx({\r\n                                                [classes.treeItemLabel]: true,\r\n                                                [classes.treeItemBoldLabel]:\r\n                                                    scrollPosition >\r\n                                                        r.start - 0.05 &&\r\n                                                    scrollPosition <=\r\n                                                        r.end - 0.05,\r\n                                            }),\r\n                                            selected: classes.treeItemSelected,\r\n                                        }}\r\n                                        nodeId={r.nodeId}\r\n                                        label={r.label}\r\n                                        onClick={() => {\r\n                                            document\r\n                                                .getElementById(\"mainComponent\")\r\n                                                .scrollTo({\r\n                                                    top:\r\n                                                        r.start *\r\n                                                        document.getElementById(\r\n                                                            \"mainComponent\"\r\n                                                        ).scrollHeight,\r\n                                                    left: 0,\r\n                                                    behavior: \"smooth\",\r\n                                                });\r\n                                        }}\r\n                                    />\r\n                                ))}\r\n                        </TreeItem>\r\n                    ))}\r\n                </TreeView>\r\n            </Grid>\r\n        </SimpleBar>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: theme.palette.common.white,\r\n        textAlign: \"center\",\r\n    },\r\n    spacingSm: {\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n    },\r\n    spacingLg: {\r\n        paddingLeft: theme.spacing(12),\r\n        paddingRight: theme.spacing(12),\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <div\r\n            className={clsx({\r\n                [classes.background]: true,\r\n                [classes.spacingSm]: isSmScreen,\r\n                [classes.spacingLg]: !isSmScreen,\r\n            })}\r\n        >\r\n            <h1>Huaigu Lin</h1>\r\n            <h3>\r\n                <i>Not your ordinary full-stack engineer.</i>\r\n            </h3>\r\n            <p>\r\n                I create frontend, backend and mobile applications with React,\r\n                Node.js, Java, SQL and MongoDB. More importantly, I'm a strong\r\n                problem-solver who cares about user experience and design.\r\n            </p>\r\n            <p>\r\n                Currently, I'm a student of the MFA Design and Technology\r\n                program at Parsons School of Design.\r\n            </p>\r\n            <p style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                | <ArrowDownwardIcon fontSize=\"inherit\" /> Scroll down to see\r\n                sample projects |\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    IconButton,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Mic as MicIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    cardRoot: {\r\n        width: 200,\r\n        height: 272,\r\n        overflowY: \"auto\",\r\n    },\r\n    italic: {\r\n        fontStyle: \"italic\",\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [speechRes, setSpeechRes] = useState();\r\n    const [listening, setListening] = useState(false);\r\n\r\n    const speechToText = async () => {\r\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\r\n            \"c87e54e21af94db4bbf766eec411f251\",\r\n            \"eastus\"\r\n        );\r\n        const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\r\n        const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\r\n        setListening(true);\r\n        const recognizeSpeechPromise = new Promise((resolve, reject) => {\r\n            recognizer.recognizeOnceAsync(\r\n                (result) => {\r\n                    recognizer.close();\r\n                    if (result.text === undefined) {\r\n                        reject(\"error in speech recognition\");\r\n                    }\r\n                    resolve(result.text);\r\n                },\r\n                (err) => {\r\n                    recognizer.close();\r\n                    console.error(err);\r\n                }\r\n            );\r\n        });\r\n        const res = await recognizeSpeechPromise;\r\n        console.log(res);\r\n        setSpeechRes(res);\r\n        setListening(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Backdrop className={classes.backdrop} open={listening}>\r\n                <Typography variant=\"h1\" color=\"textPrimary\">\r\n                    Listening...\r\n                </Typography>\r\n            </Backdrop>\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    color=\"textPrimary\"\r\n                    className={classes.italic}\r\n                >\r\n                    Speech Recognition:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Record\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Record\"\r\n                        onClick={speechToText}\r\n                    >\r\n                        <MicIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">{speechRes}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { RecordVoiceOver as RecordVoiceOverIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    italic: {\r\n        fontStyle: \"italic\",\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [speaking, setSpeaking] = useState(false);\r\n    const [text, setText] = useState();\r\n\r\n    const handleTextChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const textToSpeech = () => {\r\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\r\n            \"c87e54e21af94db4bbf766eec411f251\",\r\n            \"eastus\"\r\n        );\r\n        const audioConfig = sdk.AudioConfig.fromDefaultSpeakerOutput();\r\n        const synthesizer = new sdk.SpeechSynthesizer(\r\n            speechConfig,\r\n            audioConfig\r\n        );\r\n        synthesizer.speakSsmlAsync(\r\n            `<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\r\n            xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"zh-CN\">\r\n          <voice name=\"en-US-AriaNeural\">\r\n            <mstts:express-as style=\"customerservice\">\r\n              ${text}\r\n            </mstts:express-as>\r\n          </voice>\r\n        </speak>`,\r\n            (result) => {\r\n                setSpeaking(true);\r\n                if (result) {\r\n                    console.log(JSON.stringify(result));\r\n                }\r\n                synthesizer.close();\r\n                setTimeout(() => {\r\n                    setSpeaking(false);\r\n                }, 5000);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                synthesizer.close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Backdrop className={classes.backdrop} open={speaking}>\r\n                <Typography variant=\"h1\" color=\"textPrimary\">\r\n                    Speaking...\r\n                </Typography>\r\n            </Backdrop>\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    color=\"textPrimary\"\r\n                    className={classes.italic}\r\n                >\r\n                    Text to Speech:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    label=\"Enter Text Here\"\r\n                    multiline\r\n                    rows={12}\r\n                    variant=\"filled\"\r\n                    onChange={handleTextChange}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Speak\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Speak\"\r\n                        onClick={textToSpeech}\r\n                    >\r\n                        <RecordVoiceOverIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { MenuOpen as MenuOpenIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    cardRoot: {\r\n        width: 216,\r\n        height: 200,\r\n        overflowX: \"auto\",\r\n    },\r\n    italic: {\r\n        fontStyle: \"italic\",\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [text, setText] = useState();\r\n    const [intentString, setIntentString] = useState();\r\n\r\n    const handleTextChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const recognizeIntent = () => {\r\n        fetch(\r\n            `https://westus.api.cognitive.microsoft.com/luis/prediction/v3.0/apps/bd2bf039-0fa0-4ca3-839a-4f47053e6fd2/slots/production/predict?subscription-key=a1c2ea07c42a4b528adfc341c38668d9&query=${text}`\r\n        )\r\n            .then((res) => res.json())\r\n            .then((luisRes) => {\r\n                console.log(luisRes);\r\n                setIntentString(`{\r\n    query: \"${luisRes.query}\",\r\n    topScoringIntent: {\r\n        intent: \"${luisRes.prediction.topIntent}\",\r\n        score: \"${\r\n            luisRes.prediction.intents[luisRes.prediction.topIntent].score\r\n        }\",\r\n    },\r\n}`);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"subtitle1\"\r\n                    color=\"textPrimary\"\r\n                    className={classes.italic}\r\n                >\r\n                    Intent Recognition (Yes or No):\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    label=\"Enter Text Here\"\r\n                    variant=\"filled\"\r\n                    onChange={handleTextChange}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Get Intent\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Get Intent\"\r\n                        onClick={recognizeIntent}\r\n                    >\r\n                        <MenuOpenIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardContent>\r\n                        <pre>\r\n                            <code>{intentString}</code>\r\n                        </pre>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport {\r\n    ArrowBack as ArrowBackIcon,\r\n    OpenInNew as OpenInNewIcon,\r\n} from \"@material-ui/icons\";\r\nimport SpeechRecognition from \"./speechToText\";\r\nimport TextToSpeech from \"./textToSpeech\";\r\nimport IntentRecognition from \"./intentRecognition\";\r\n\r\nexport default (props) => {\r\n    const { setDisplayVideo } = props;\r\n    return (\r\n        <Fragment>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    <Grid item xs={12} md={4}>\r\n                        <SpeechRecognition />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextToSpeech />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <IntentRecognition />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n                <Grid container justify=\"center\" spacing={4}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<ArrowBackIcon fontSize=\"inherit\" />}\r\n                            size=\"large\"\r\n                            onClick={() => setDisplayVideo(true)}\r\n                        >\r\n                            Back to Video\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\r\n                            onClick={() => {\r\n                                window.open(\"https://www.xyici.com\", \"_blank\");\r\n                            }}\r\n                            size=\"large\"\r\n                        >\r\n                            View the Live Demo\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Icon,\r\n    Link,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\nimport Demo from \"./demo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [displayVideo, setDisplayVideo] = useState(true);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                    align=\"center\"\r\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\r\n                >\r\n                    <b>Intelligent Call Center for Banks, Proof of Concept</b>\r\n                </Typography>\r\n            </Grid>\r\n            {displayVideo ? (\r\n                <Fragment>\r\n                    <Grid item>\r\n                        <Grid container spacing={4} alignItems=\"center\">\r\n                            <Grid item xs={12} md={6}>\r\n                                <iframe\r\n                                    style={\r\n                                        isSmScreen\r\n                                            ? { marginLeft: 8, marginRight: 8 }\r\n                                            : { marginLeft: 16 }\r\n                                    }\r\n                                    width=\"100%\"\r\n                                    height={isSmScreen ? \"315\" : \"480\"}\r\n                                    src=\"https://www.youtube.com/embed/v6TqeO2SzT0\"\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    align=\"center\"\r\n                                    style={\r\n                                        isSmScreen\r\n                                            ? { marginLeft: 8, marginRight: 8 }\r\n                                            : { marginRight: 16 }\r\n                                    }\r\n                                >\r\n                                    <b>\r\n                                        Using <i>speech recognition</i>,{\" \"}\r\n                                        <i>text to speech</i>,{\" \"}\r\n                                        <i>intent recognition</i> and{\" \"}\r\n                                        <i>frontend animation</i> to showcase\r\n                                        the company's technical expertise in\r\n                                        building an intelligent call center\r\n                                    </b>\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography color=\"textPrimary\" align=\"center\">\r\n                                    Type of Work: <i>professional</i>,{\" \"}\r\n                                    <i>independent</i>\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography color=\"textPrimary\" align=\"center\">\r\n                                    Icons:{\" \"}\r\n                                    <Link\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href=\"https://streamlineicons.com/\"\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        Streamline Icons\r\n                                        <OpenInNewIcon\r\n                                            color=\"inherit\"\r\n                                            fontSize=\"inherit\"\r\n                                        />\r\n                                    </Link>\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography color=\"textPrimary\" align=\"center\">\r\n                                    Speech Services:{\" \"}\r\n                                    <Link\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        href=\"https://azure.microsoft.com/en-us/services/cognitive-services/speech-services/\"\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        Microsoft Azure\r\n                                        <OpenInNewIcon\r\n                                            color=\"inherit\"\r\n                                            fontSize=\"inherit\"\r\n                                        />\r\n                                    </Link>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item style={{ width: \"100%\" }}>\r\n                        <Grid container justify=\"center\" spacing={4}>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    endIcon={\r\n                                        <OpenInNewIcon fontSize=\"inherit\" />\r\n                                    }\r\n                                    onClick={() => {\r\n                                        window.open(\r\n                                            \"https://youtu.be/v6TqeO2SzT0\",\r\n                                            \"_blank\"\r\n                                        );\r\n                                    }}\r\n                                    size=\"large\"\r\n                                >\r\n                                    View on YouTube\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => setDisplayVideo(false)}\r\n                                >\r\n                                    Try It Yourself!\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            ) : (\r\n                <Demo setDisplayVideo={setDisplayVideo} />\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    italic: {\r\n        fontStyle: \"italic\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\r\n                        <b>ShopNow E-commerce Platform</b>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container spacing={4} alignItems=\"center\">\r\n                        <Grid item xs={12} md={4}>\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            >\r\n                                <b>\r\n                                    A one-stop platform solution that helps\r\n                                    international businesses launch and manage\r\n                                    e-commerce activities in the Chinese market\r\n                                </b>\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography color=\"textPrimary\" align=\"center\">\r\n                                Type of Work: <i>professional</i>, <i>team</i>\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography color=\"textPrimary\" align=\"center\">\r\n                                Designer: Felix Wang\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography color=\"textPrimary\" align=\"center\">\r\n                                Co-developer: Chenjie Wang\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"textPrimary\"\r\n                                gutterBottom\r\n                                className={classes.italic}\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : {}\r\n                                }\r\n                            >\r\n                                Interactive Map:{\" \"}\r\n                            </Typography>\r\n                            <video\r\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/interactive_map.mp4\"\r\n                                type=\"video/mp4\"\r\n                                autoPlay\r\n                                loop\r\n                                width=\"100%\"\r\n                                muted\r\n                                playsInline\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : {}\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item>\r\n                    <Grid container spacing={4} alignItems=\"center\">\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"textPrimary\"\r\n                                gutterBottom\r\n                                className={classes.italic}\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            >\r\n                                SMS Template Generator:{\" \"}\r\n                            </Typography>\r\n                            <video\r\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/Template.mp4\"\r\n                                type=\"video/mp4\"\r\n                                autoPlay\r\n                                loop\r\n                                width=\"100%\"\r\n                                muted\r\n                                playsInline\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                This form contains many tools that help users\r\n                                easily generate SMS marketing contents that\r\n                                follow regulators' rules\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                SUBMIT button submits the template application\r\n                                to multiple SMS service providers and redirects\r\n                                to an application status page, where user can\r\n                                monitor the status of the application\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item>\r\n                    <Grid container spacing={4} alignItems=\"center\">\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"textPrimary\"\r\n                                gutterBottom\r\n                                className={classes.italic}\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            >\r\n                                WeChat Public Account Message Generator:{\" \"}\r\n                            </Typography>\r\n                            <video\r\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/welcome_message.mp4\"\r\n                                type=\"video/mp4\"\r\n                                autoPlay\r\n                                loop\r\n                                width=\"100%\"\r\n                                muted\r\n                                playsInline\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                WeChat Public Account is an important eCommerce\r\n                                marketing channel in the Chinese market\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                This form helps users generate WeChat Public\r\n                                Account messages with materials they uploaded\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                Users can choose many content types, as well as\r\n                                visualize the message simultaneously when they\r\n                                are filling out the form\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item>\r\n                    <Grid container spacing={4} alignItems=\"center\">\r\n                        <Grid item xs={12} md={7}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"textPrimary\"\r\n                                gutterBottom\r\n                                className={classes.italic}\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            >\r\n                                Sales and Marketing Data Visulization:{\" \"}\r\n                            </Typography>\r\n                            <video\r\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/data_visulization_2.mp4\"\r\n                                type=\"video/mp4\"\r\n                                autoPlay\r\n                                loop\r\n                                width=\"100%\"\r\n                                muted\r\n                                playsInline\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={5}>\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginRight: 16 }\r\n                                }\r\n                            >\r\n                                Charts, tables and cards that help users track\r\n                                sales data and monitor effectiveness of\r\n                                marketing campaigns\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, Link, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\r\n                    <b>Customer Service AI Trainer</b>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid container spacing={4} alignItems=\"center\">\r\n                    <Grid item xs={12} md={4}>\r\n                        <video\r\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/customer_service_ai_trainer_demo.mp4\"\r\n                            type=\"video/mp4\"\r\n                            autoPlay\r\n                            loop\r\n                            width=\"100%\"\r\n                            muted\r\n                            playsInline\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginLeft: 16, maxHeight: 540 }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={8}>\r\n                        <Typography\r\n                            color=\"textPrimary\"\r\n                            align=\"center\"\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginRight: 16 }\r\n                            }\r\n                        >\r\n                            <b>\r\n                                An Android native APP that trains customer\r\n                                service agents on how to talk to customers.{\" \"}\r\n                                <i>Speech recognition</i> is used to recognize\r\n                                users' voice. A custom <i>NLP module</i> is used\r\n                                to mimic customers' questions, score customer\r\n                                service agents' answers and give out standard\r\n                                answers\r\n                            </b>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Type of Work: <i>professional</i>,{\" \"}\r\n                            <i>independent</i>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Speech Recognition:{\" \"}\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://www.xfyun.cn/services/voicedictation\"\r\n                                color=\"textSecondary\"\r\n                            >\r\n                                Xunfei Cloud\r\n                                <OpenInNewIcon\r\n                                    color=\"inherit\"\r\n                                    fontSize=\"inherit\"\r\n                                />\r\n                            </Link>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            NLP Module: Zhijue Information\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\r\n                    <b>Crawler Manager</b>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid container spacing={4} alignItems=\"center\">\r\n                    <Grid item xs={12} md={7}>\r\n                        <video\r\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/crawler_manager.mp4\"\r\n                            type=\"video/mp4\"\r\n                            autoPlay\r\n                            loop\r\n                            width=\"100%\"\r\n                            muted\r\n                            playsInline\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginLeft: 16 }\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={5}>\r\n                        <Typography\r\n                            color=\"textPrimary\"\r\n                            align=\"center\"\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginRight: 16 }\r\n                            }\r\n                        >\r\n                            <b>\r\n                                A company internal tool to help users launch and\r\n                                monitor crawler tasks without any programming\r\n                            </b>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Type of Work: <i>professional</i>,{\" \"}\r\n                            <i>independent</i>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    Backdrop,\r\n    Button,\r\n    ClickAwayListener,\r\n    Grid,\r\n    Tooltip,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    cellFill: {\r\n        cursor: \"pointer\",\r\n        fill: \"#e6e6e6\",\r\n        transition: \"all 100ms\",\r\n    },\r\n    cellLetter: {\r\n        fontWeight: 700,\r\n        fontSize: 30,\r\n        textAnchor: \"middle\",\r\n        textTransform: \"uppercase\",\r\n        pointerEvents: \"none\",\r\n    },\r\n    hive: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        paddingBottom: \"103.92305%\",\r\n        \"& div:nth-child(1)\": {\r\n            transform: \"translate(0, 0)\",\r\n            \"& polygon\": {\r\n                fill: \"#f8cd05\",\r\n            },\r\n        },\r\n        \"& div:nth-child(2)\": {\r\n            transform: \"translate(-75%, -50%)\",\r\n        },\r\n        \"& div:nth-child(3)\": {\r\n            transform: \"translate(0, -100%)\",\r\n        },\r\n        \"& div:nth-child(4)\": {\r\n            transform: \"translate(75%, -50%)\",\r\n        },\r\n        \"& div:nth-child(5)\": {\r\n            transform: \"translate(75%, 50%)\",\r\n        },\r\n        \"& div:nth-child(6)\": {\r\n            transform: \"translate(0, 100%)\",\r\n        },\r\n        \"& div:nth-child(7)\": {\r\n            transform: \"translate(-75%, 50%)\",\r\n        },\r\n    },\r\n    hiveCell: {\r\n        position: \"absolute\",\r\n        top: \"calc(100% / 3)\",\r\n        left: \"30%\",\r\n        width: \"40%\",\r\n        height: \"calc(100% / 3)\",\r\n        outline: \"none\",\r\n    },\r\n    sbControls: {\r\n        width: \"90vw\",\r\n        maxWidth: 290,\r\n    },\r\n    sbHive: {\r\n        width: \"90%\",\r\n        margin: \"25px auto\",\r\n    },\r\n    sbHiveInput: {\r\n        textTransform: \"uppercase\",\r\n        fontSize: 32,\r\n        fontWeight: 700,\r\n        letterSpacing: 0.5,\r\n        color: theme.palette.common.white,\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nconst HiveCell = (props) => {\r\n    const classes = useStyles();\r\n    const { className, isCenter, tabIndex, letter, setLetter } = props;\r\n    const [focus, setFoucs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (focus) {\r\n            const handleKeyDown = (e) => {\r\n                if (e.code.startsWith(\"Key\")) {\r\n                    setLetter(e.code.slice(3));\r\n                } else if (e.code === \"Backspace\") {\r\n                    setLetter(null);\r\n                }\r\n            };\r\n            document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n            return function cleanup() {\r\n                document.removeEventListener(\"keydown\", handleKeyDown);\r\n            };\r\n        }\r\n    }, [focus]);\r\n\r\n    return (\r\n        <div\r\n            onFocus={() => {\r\n                setFoucs(true);\r\n            }}\r\n            onBlur={() => {\r\n                setFoucs(false);\r\n            }}\r\n            className={classes.hiveCell}\r\n            tabIndex={tabIndex}\r\n        >\r\n            {focus && (\r\n                <input\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    tabIndex={tabIndex}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        height: 0,\r\n                        padding: \"unset\",\r\n                        margin: \"unset\",\r\n                        border: \"none\",\r\n                    }}\r\n                />\r\n            )}\r\n            <svg viewBox=\"0 0 120 103.92304845413263\">\r\n                <polygon\r\n                    className={classes.cellFill}\r\n                    points=\"0,51.96152422706631 30,0 90,0 120,51.96152422706631 90,103.92304845413263 30,103.92304845413263\"\r\n                    stroke=\"#282c34\"\r\n                    stroke-width=\"7.5\"\r\n                />\r\n                <text\r\n                    className={classes.cellLetter}\r\n                    x=\"50%\"\r\n                    y=\"50%\"\r\n                    dy=\"10.75%\"\r\n                >\r\n                    {letter}\r\n                </text>\r\n                {focus && (\r\n                    <line\r\n                        strokeWidth=\"3\"\r\n                        x1={letter ? \"75\" : \"50\"}\r\n                        y1=\"25\"\r\n                        x2={letter ? \"75\" : \"50\"}\r\n                        y2=\"75\"\r\n                        stroke={isCenter ? \"black\" : \"#f8cd05\"}\r\n                    >\r\n                        <animate\r\n                            attributeName=\"display\"\r\n                            from=\"block\"\r\n                            to=\"none\"\r\n                            dur=\"1s\"\r\n                            repeatCount=\"indefinite\"\r\n                        />\r\n                    </line>\r\n                )}\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Hive = (props) => {\r\n    const { setResult } = props;\r\n    const classes = useStyles();\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    const [letter1, setLetter1] = useState(null);\r\n    const [letter2, setLetter2] = useState(null);\r\n    const [letter3, setLetter3] = useState(null);\r\n    const [letter4, setLetter4] = useState(null);\r\n    const [letter5, setLetter5] = useState(null);\r\n    const [letter6, setLetter6] = useState(null);\r\n    const [letter7, setLetter7] = useState(null);\r\n    const [solving, setSolving] = useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setTooltipOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setTooltipOpen(true);\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            // direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.sbControls}\r\n            spacing={2}\r\n        >\r\n            <Backdrop className={classes.backdrop} open={solving}>\r\n                <Typography variant=\"h1\" color=\"textPrimary\">\r\n                    Solving...\r\n                </Typography>\r\n            </Backdrop>\r\n            <Grid item xs={12} className={classes.sbHive}>\r\n                <div className={classes.hive}>\r\n                    <HiveCell\r\n                        isCenter\r\n                        tabIndex=\"1\"\r\n                        letter={letter1}\r\n                        setLetter={setLetter1}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"2\"\r\n                        letter={letter2}\r\n                        setLetter={setLetter2}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"3\"\r\n                        letter={letter3}\r\n                        setLetter={setLetter3}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"4\"\r\n                        letter={letter4}\r\n                        setLetter={setLetter4}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"5\"\r\n                        letter={letter5}\r\n                        setLetter={setLetter5}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"6\"\r\n                        letter={letter6}\r\n                        setLetter={setLetter6}\r\n                    />\r\n                    <HiveCell\r\n                        tabIndex=\"7\"\r\n                        letter={letter7}\r\n                        setLetter={setLetter7}\r\n                    />\r\n                </div>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                    <Tooltip\r\n                        PopperProps={{\r\n                            disablePortal: true,\r\n                        }}\r\n                        onClose={handleTooltipClose}\r\n                        open={tooltipOpen}\r\n                        disableFocusListener\r\n                        disableHoverListener\r\n                        disableTouchListener\r\n                        title=\"Oops! Fill out all letters first...\"\r\n                        placement=\"top\"\r\n                        classes={{ tooltip: classes.tooltip }}\r\n                    >\r\n                        <Button\r\n                            tabIndex=\"8\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            onClick={() => {\r\n                                if (\r\n                                    !letter1 ||\r\n                                    !letter2 ||\r\n                                    !letter3 ||\r\n                                    !letter4 ||\r\n                                    !letter5 ||\r\n                                    !letter6 ||\r\n                                    !letter7\r\n                                ) {\r\n                                    handleTooltipOpen();\r\n                                } else {\r\n                                    setSolving(true);\r\n                                    let letters =\r\n                                        letter1 +\r\n                                        letter2 +\r\n                                        letter3 +\r\n                                        letter4 +\r\n                                        letter5 +\r\n                                        letter6 +\r\n                                        letter7;\r\n                                    letters = letters.toLowerCase();\r\n                                    fetch(\r\n                                        \"https://personal-website-spelling-bee-backend.com/backend/findWords\",\r\n                                        {\r\n                                            method: \"POST\",\r\n                                            headers: {\r\n                                                \"Content-Type\":\r\n                                                    \"application/json\",\r\n                                            },\r\n                                            body: JSON.stringify({\r\n                                                letters: letters,\r\n                                                centerLetter: letter1.toLowerCase(),\r\n                                            }),\r\n                                        }\r\n                                    )\r\n                                        .then((response) => response.json())\r\n                                        .then((data) => {\r\n                                            setSolving(false);\r\n                                            setResult(data);\r\n                                            document\r\n                                                .getElementById(\"mainComponent\")\r\n                                                .scrollTo({\r\n                                                    top:\r\n                                                        (9 / 11) *\r\n                                                        document.getElementById(\r\n                                                            \"mainComponent\"\r\n                                                        ).scrollHeight,\r\n                                                    left: 0,\r\n                                                    behavior: \"smooth\",\r\n                                                });\r\n                                        });\r\n                                }\r\n                            }}\r\n                        >\r\n                            let me solve it for you!\r\n                        </Button>\r\n                    </Tooltip>\r\n                </ClickAwayListener>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\r\n                    onClick={() => {\r\n                        window.open(\r\n                            \"https://www.nytimes.com/puzzles/spelling-bee\",\r\n                            \"_blank\"\r\n                        );\r\n                    }}\r\n                    size=\"large\"\r\n                >\r\n                    check today's puzzle on new york times\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Hive;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Grid,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport Hive from \"./hive\";\r\nimport {\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowForward as ArrowForwardIcon,\r\n    OpenInNew as OpenInNewIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n    cardRoot: {\r\n        width: \"100%\",\r\n        height: \"70vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [result, setResult] = useState([]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        color=\"textPrimary\"\r\n                        align=\"center\"\r\n                        style={\r\n                            isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}\r\n                        }\r\n                    >\r\n                        <b>New York Times Spelling Bee Solver</b>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item style={{ width: \"100%\" }}>\r\n                    <Grid\r\n                        container\r\n                        spacing={4}\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={6}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                flexDirection: \"column\",\r\n                            }}\r\n                        >\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={\r\n                                    isSmScreen\r\n                                        ? { marginLeft: 8, marginRight: 8 }\r\n                                        : { marginLeft: 16 }\r\n                                }\r\n                            >\r\n                                <b>\r\n                                    A tool to solve New York Times' Spelling Bee\r\n                                    puzzle. Just because I don't like to do it\r\n                                    by hand\r\n                                </b>\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography color=\"textPrimary\" align=\"center\">\r\n                                Type of Work: <i>recreational</i>,{\" \"}\r\n                                <i>independent</i>\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                align=\"center\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                | Enter letters in the hive{\" \"}\r\n                                {isSmScreen ? (\r\n                                    <ArrowDownwardIcon fontSize=\"inherit\" />\r\n                                ) : (\r\n                                    <ArrowForwardIcon fontSize=\"inherit\" />\r\n                                )}{\" \"}\r\n                                |\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={6}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                // flexDirection: \"column\",\r\n                            }}\r\n                        >\r\n                            <Hive setResult={setResult} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={\r\n                    isSmScreen ? classes.backgroundSm : classes.background\r\n                }\r\n            >\r\n                <Grid item xs={12} md={6}>\r\n                    <Card\r\n                        className={classes.cardRoot}\r\n                        variant=\"outlined\"\r\n                        style={\r\n                            isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}\r\n                        }\r\n                    >\r\n                        <CardContent style={{ height: \"80%\" }}>\r\n                            <Typography\r\n                                className={classes.title}\r\n                                color=\"textSecondary\"\r\n                                gutterBottom\r\n                            >\r\n                                I have found {result.length} word for you\r\n                            </Typography>\r\n                            <div\r\n                                style={{\r\n                                    height: \"100%\",\r\n                                    overflow: \"auto\",\r\n                                }}\r\n                            >\r\n                                <ul\r\n                                    style={{\r\n                                        columnCount: 3,\r\n                                        listStyleType: \"none\",\r\n                                    }}\r\n                                >\r\n                                    {result.length > 0 &&\r\n                                        result.map((word, index) => (\r\n                                            <li key={index}>\r\n                                                <Typography variant=\"body1\">\r\n                                                    {word}\r\n                                                </Typography>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            </div>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\r\n                                onClick={() => {\r\n                                    window.open(\r\n                                        \"https://github.com/huaigulin/NYTimes_Spelling_Bee_Solver\",\r\n                                        \"_blank\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                check my algorithm\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Chip, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: \"white\",\r\n    },\r\n    chipIcon: {\r\n        marginLeft: \"-4px !important\",\r\n    },\r\n    chipOutlined: {\r\n        color: theme.palette.common.white,\r\n        borderColor: theme.palette.common.white,\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    // const controls = useAnimation();\r\n    // const controls2 = useAnimation();\r\n    // const controls3 = useAnimation();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Get in Touch</h1>\r\n            <p>huaigu.lin@hotmail.com</p>\r\n            <Grid container justify=\"center\">\r\n                <Typography variant=\"body1\" style={{ position: \"relative\" }}>\r\n                    This website is built with React.js and\r\n                    <motion.div\r\n                        animate={{\r\n                            x: 64,\r\n                            y: -64,\r\n                            opacity: 0,\r\n                            rotate: 30,\r\n                            zoom: 2,\r\n                            transition: {\r\n                                duration: 3,\r\n                                repeat: Infinity,\r\n                            },\r\n                            transitionEnd: { visibility: \"hidden\" },\r\n                        }}\r\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\r\n                    >\r\n                        <FavoriteIcon color=\"secondary\" />\r\n                    </motion.div>\r\n                    <motion.div\r\n                        animate={{\r\n                            x: -48,\r\n                            y: -48,\r\n                            opacity: 0,\r\n                            rotate: -45,\r\n                            transition: {\r\n                                duration: 3,\r\n                                repeat: Infinity,\r\n                            },\r\n                            transitionEnd: { visibility: \"hidden\" },\r\n                        }}\r\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\r\n                    >\r\n                        <FavoriteIcon color=\"secondary\" />\r\n                    </motion.div>\r\n                    <motion.div\r\n                        animate={{\r\n                            y: -72,\r\n                            opacity: 0,\r\n                            rotate: -5,\r\n                            zoom: 1.5,\r\n                            transition: {\r\n                                duration: 3,\r\n                                repeat: Infinity,\r\n                            },\r\n                            transitionEnd: { visibility: \"hidden\" },\r\n                        }}\r\n                        style={{ position: \"absolute\", top: 12, right: 12 }}\r\n                    >\r\n                        <FavoriteIcon color=\"secondary\" />\r\n                    </motion.div>\r\n                    <motion.div\r\n                        whileHover={{ scale: 1.2 }}\r\n                        style={{ display: \"inline-block\" }}\r\n                    >\r\n                        <IconButton\r\n                            aria-label=\"like\"\r\n                            color=\"secondary\"\r\n                            fontSize=\"large\"\r\n                        >\r\n                            <FavoriteIcon />\r\n                        </IconButton>\r\n                    </motion.div>\r\n                </Typography>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Icon,\r\n    Link,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                    align=\"center\"\r\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\r\n                >\r\n                    <b>Instruction Set for Strangers</b>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid container spacing={4} alignItems=\"center\">\r\n                    <Grid item xs={12} md={7}>\r\n                        <iframe\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginLeft: 16 }\r\n                            }\r\n                            width=\"100%\"\r\n                            height={isSmScreen ? \"315\" : \"480\"}\r\n                            src=\"https://www.youtube.com/embed/y5e17zLZ26k\"\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={5}>\r\n                        <Typography\r\n                            color=\"textPrimary\"\r\n                            align=\"center\"\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginRight: 16 }\r\n                            }\r\n                        >\r\n                            <b>\r\n                                How to make an installation and get strangers to\r\n                                interact with it <i>without using any text</i>?\r\n                            </b>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Type of Work: <i>school project</i>, <i>team</i>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Teammate: Tricia Ilena\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Location:{\" \"}\r\n                            <Link\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                href=\"https://goo.gl/maps/STaZkdQ2Fe89q62w9\"\r\n                                color=\"textSecondary\"\r\n                            >\r\n                                Pier I, Riverside Park South, New York, NY\r\n                                <OpenInNewIcon\r\n                                    color=\"inherit\"\r\n                                    fontSize=\"inherit\"\r\n                                />\r\n                            </Link>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Icon,\r\n    Link,\r\n    Typography,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                    align=\"center\"\r\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\r\n                >\r\n                    <b>Hourglass</b>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Grid container spacing={4} alignItems=\"center\">\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography\r\n                            color=\"textPrimary\"\r\n                            align=\"center\"\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginRight: 16 }\r\n                            }\r\n                        >\r\n                            <b>An hourglass drawing in p5.js</b>\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography color=\"textPrimary\" align=\"center\">\r\n                            Type of Work: <i>school project</i>,{\" \"}\r\n                            <i>independent</i>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <iframe\r\n                            style={\r\n                                isSmScreen\r\n                                    ? { marginLeft: 8, marginRight: 8 }\r\n                                    : { marginLeft: 16 }\r\n                            }\r\n                            width={400}\r\n                            height={400}\r\n                            src=\"https://preview.p5js.org/kevin.lin/embed/fIecHbPqB\"\r\n                            frameBorder=\"0\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport SideNavigation from \"../../components/sideNav/sideNav\";\r\nimport Introduction from \"../../components/introduction/introduction\";\r\nimport CallCenterDemo from \"../../components/callCenter/callCenter\";\r\nimport ShopNow from \"../../components/shopNow/shopNow\";\r\nimport CsTrainer from \"../../components/csTrainer/csTrainer\";\r\nimport CrawlerManager from \"../../components/crawlerManager/crawlerManager\";\r\nimport SpellingBee from \"../../components/spellingBee/spellingBee\";\r\nimport Contact from \"../../components/contact/contact\";\r\nimport InstructionSet from \"../../components/instructionSet/instructionSet\";\r\nimport Time from \"../../components/time/time\";\r\n\r\nconst useStyles = makeStyles({\r\n    mainBackground: {\r\n        backgroundColor: \"#282c34\",\r\n        height: \"100vh\",\r\n        overflowY: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isBigScreen = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n    const handleScroll = () => {\r\n        const position =\r\n            document.getElementById(\"mainComponent\").scrollTop /\r\n            document.getElementById(\"mainComponent\").scrollHeight;\r\n        setScrollPosition(position);\r\n    };\r\n    console.log(scrollPosition);\r\n\r\n    useEffect(() => {\r\n        document\r\n            .getElementById(\"mainComponent\")\r\n            .addEventListener(\"scroll\", handleScroll, { passive: true });\r\n\r\n        return () => {\r\n            document\r\n                .getElementById(\"mainComponent\")\r\n                .removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    // console.log(scrollPosition);\r\n\r\n    return (\r\n        <Grid container>\r\n            {isBigScreen && (\r\n                <Grid item md={3}>\r\n                    <SideNavigation scrollPosition={scrollPosition} />\r\n                </Grid>\r\n            )}\r\n            <Grid item xs={12} md={9}>\r\n                <div id=\"mainComponent\" className={classes.mainBackground}>\r\n                    <Introduction />\r\n                    <CallCenterDemo />\r\n                    <ShopNow />\r\n                    <CsTrainer />\r\n                    <CrawlerManager />\r\n                    <SpellingBee />\r\n                    <InstructionSet />\r\n                    <Time />\r\n                    <Contact />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ProjectPage from \"./views/projectPage/projectPage\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n    palette: {\n        background: {\n            default: \"#121212\",\n            level1: \"#212121\",\n            level2: \"#333\",\n            paper: \"#424242\",\n        },\n        common: {\n            black: \"#000\",\n            white: \"#fff\",\n        },\n        primary: {\n            light: \"#80d6ff\",\n            main: \"#42a5f5\",\n            dark: \"#0077c2\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff77a9\",\n            main: \"#ec407a\",\n            dark: \"#b4004e\",\n            contrastText: \"#fff\",\n        },\n        text: {\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\",\n            primary: \"#fff\",\n            secondary: \"rgba(255, 255, 255, 0.7)\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <ProjectPage />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}