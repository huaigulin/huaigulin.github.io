{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sideNav/sideNav.js","components/introduction/introduction.js","components/callCenter/speechToText.js","components/callCenter/textToSpeech.js","components/callCenter/intentRecognition.js","components/callCenter/demo.js","components/callCenter/callCenter.js","components/shopNow/shopNow.js","components/csTrainer/csTrainer.js","components/crawlerManager/crawlerManager.js","components/spellingBee/spellingBee.js","components/contact/contact.js","views/projectPage/projectPage.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","sideBackground","backgroundColor","height","color","overflowY","treeItemBoldLabel","fontWeight","palette","common","white","treeItemContent","treeItemLabel","treeItemNestedRoot","marginBottom","marginTop","treeItemRoot","treeViewRoot","padding","treeItemData","nodeId","label","start","end","nestedData","props","scrollPosition","classes","useState","expanded","setExpanded","useEffect","Grid","className","container","direction","justify","alignItems","TreeView","root","defaultCollapseIcon","KeyboardArrowDown","defaultExpandIcon","KeyboardArrowUp","map","row","TreeItem","content","clsx","selected","treeItemSelected","onClick","length","document","getElementById","scrollTo","top","scrollHeight","left","behavior","r","background","display","flexDirection","justifyContent","fontSize","backdrop","zIndex","drawer","black","cardRoot","width","tooltip","speechRes","setSpeechRes","listening","setListening","speechToText","a","speechConfig","sdk","fromSubscription","audioConfig","fromDefaultMicrophoneInput","recognizer","recognizeSpeechPromise","Promise","resolve","reject","recognizeOnceAsync","result","close","undefined","text","err","console","error","res","log","spacing","Backdrop","open","Typography","variant","item","Tooltip","title","placement","IconButton","aria-label","Mic","Card","CardContent","speaking","setSpeaking","setText","TextField","multiline","rows","onChange","event","target","value","fromDefaultSpeakerOutput","synthesizer","speakSsmlAsync","JSON","stringify","setTimeout","RecordVoiceOver","overflowX","intentString","setIntentString","fetch","json","luisRes","query","prediction","topIntent","intents","score","MenuOpen","setDisplayVideo","style","xs","md","Button","startIcon","ArrowBack","size","endIcon","OpenInNew","window","backgroundSm","useTheme","isSmScreen","useMediaQuery","breakpoints","down","displayVideo","src","frameBorder","allow","allowFullScreen","gutterBottom","type","autoPlay","loop","muted","mainBackground","isBigScreen","up","setScrollPosition","handleScroll","position","scrollTop","addEventListener","passive","removeEventListener","id","createMuiTheme","values","sm","lg","xl","default","level1","level2","paper","primary","light","main","dark","contrastText","secondary","disabled","hint","icon","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.628b0bb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\r\nimport {\r\n    KeyboardArrowDown as KeyboardArrowDownIcon,\r\n    KeyboardArrowUp as KeyboardArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sideBackground: {\r\n        backgroundColor: \"#121212\",\r\n        height: \"100vh\",\r\n        color: \"rgba(255, 255, 255, 0.6)\",\r\n        overflowY: \"auto\",\r\n    },\r\n    treeItemBoldLabel: {\r\n        fontWeight: \"bold\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    treeItemContent: {\r\n        \"&:hover\": {\r\n            color: theme.palette.common.white,\r\n        },\r\n        height: \"3.5em\",\r\n    },\r\n    treeItemLabel: {\r\n        backgroundColor: \"#121212 !important\",\r\n    },\r\n    treeItemNestedRoot: {\r\n        marginBottom: 16,\r\n        marginTop: 16,\r\n    },\r\n    treeItemRoot: {\r\n        marginBottom: 24,\r\n        \"&:first-child\": {\r\n            marginTop: 24,\r\n        },\r\n    },\r\n    treeViewRoot: {\r\n        padding: 24,\r\n        height: \"fit-content\",\r\n    },\r\n}));\r\n\r\nconst treeItemData = [\r\n    { nodeId: \"1\", label: \"Introduction\", start: 0, end: 0.1 },\r\n    {\r\n        nodeId: \"expandable\",\r\n        label: \"Project Showcase\",\r\n        nestedData: [\r\n            {\r\n                nodeId: \"2\",\r\n                label: \"Intelligent Call Center for Banks, Proof of Concept\",\r\n                start: 0.1,\r\n                end: 0.2,\r\n            },\r\n            {\r\n                nodeId: \"3\",\r\n                label: \"ShopNow Ecommerce Platform\",\r\n                start: 0.2,\r\n                end: 0.6,\r\n            },\r\n            {\r\n                nodeId: \"4\",\r\n                label: \"Customer Service AI Trainer\",\r\n                start: 0.6,\r\n                end: 0.7,\r\n            },\r\n            { nodeId: \"5\", label: \"Crawler Manager\", start: 0.7, end: 0.8 },\r\n            { nodeId: \"6\", label: \"Spelling Bee\", start: 0.8, end: 0.9 },\r\n        ],\r\n    },\r\n    { nodeId: \"7\", label: \"Get in Touch\", start: 0.9, end: 1 },\r\n];\r\n\r\nexport default (props) => {\r\n    const { scrollPosition } = props;\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (scrollPosition > 0.5 / 10) setExpanded([\"expandable\"]);\r\n    }, [scrollPosition]);\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.sideBackground}\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n        >\r\n            <TreeView\r\n                classes={{ root: classes.treeViewRoot }}\r\n                defaultCollapseIcon={<KeyboardArrowDownIcon />}\r\n                defaultExpandIcon={<KeyboardArrowUpIcon />}\r\n                expanded={expanded}\r\n            >\r\n                {treeItemData.map((row) => (\r\n                    <TreeItem\r\n                        key={row.nodeId}\r\n                        nodeId={row.nodeId}\r\n                        label={row.label}\r\n                        classes={{\r\n                            root: classes.treeItemRoot,\r\n                            content: classes.treeItemContent,\r\n                            label: clsx({\r\n                                [classes.treeItemLabel]: true,\r\n                                [classes.treeItemBoldLabel]:\r\n                                    scrollPosition > row.start - 0.05 &&\r\n                                    scrollPosition <= row.end - 0.05,\r\n                            }),\r\n                            selected: classes.treeItemSelected,\r\n                        }}\r\n                        onClick={() => {\r\n                            if (!row.nestedData) {\r\n                                document\r\n                                    .getElementById(\"mainComponent\")\r\n                                    .scrollTo({\r\n                                        top:\r\n                                            row.start *\r\n                                            document.getElementById(\r\n                                                \"mainComponent\"\r\n                                            ).scrollHeight,\r\n                                        left: 0,\r\n                                        behavior: \"smooth\",\r\n                                    });\r\n                            } else {\r\n                                setExpanded((expanded) => {\r\n                                    if (expanded.length > 0) {\r\n                                        return [];\r\n                                    } else {\r\n                                        return [\"expandable\"];\r\n                                    }\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {row.nestedData &&\r\n                            row.nestedData.map((r) => (\r\n                                <TreeItem\r\n                                    key={r.nodeId}\r\n                                    classes={{\r\n                                        root: classes.treeItemNestedRoot,\r\n                                        content: classes.treeItemContent,\r\n                                        label: clsx({\r\n                                            [classes.treeItemLabel]: true,\r\n                                            [classes.treeItemBoldLabel]:\r\n                                                scrollPosition >\r\n                                                    r.start - 0.05 &&\r\n                                                scrollPosition <= r.end - 0.05,\r\n                                        }),\r\n                                        selected: classes.treeItemSelected,\r\n                                    }}\r\n                                    nodeId={r.nodeId}\r\n                                    label={r.label}\r\n                                    onClick={() => {\r\n                                        document\r\n                                            .getElementById(\"mainComponent\")\r\n                                            .scrollTo({\r\n                                                top:\r\n                                                    r.start *\r\n                                                    document.getElementById(\r\n                                                        \"mainComponent\"\r\n                                                    ).scrollHeight,\r\n                                                left: 0,\r\n                                                behavior: \"smooth\",\r\n                                            });\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                    </TreeItem>\r\n                ))}\r\n            </TreeView>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: theme.palette.common.white,\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Huaigu Lin</h1>\r\n            <p>Not your ordinary full-stack engineer.</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    IconButton,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Mic as MicIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    cardRoot: {\r\n        width: 200,\r\n        height: 272,\r\n        overflowY: \"auto\",\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [speechRes, setSpeechRes] = useState();\r\n    const [listening, setListening] = useState(false);\r\n\r\n    const speechToText = async () => {\r\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\r\n            \"c87e54e21af94db4bbf766eec411f251\",\r\n            \"eastus\"\r\n        );\r\n        const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\r\n        const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\r\n        setListening(true);\r\n        const recognizeSpeechPromise = new Promise((resolve, reject) => {\r\n            recognizer.recognizeOnceAsync(\r\n                (result) => {\r\n                    recognizer.close();\r\n                    if (result.text === undefined) {\r\n                        reject(\"error in speech recognition\");\r\n                    }\r\n                    resolve(result.text);\r\n                },\r\n                (err) => {\r\n                    recognizer.close();\r\n                    console.error(err);\r\n                }\r\n            );\r\n        });\r\n        const res = await recognizeSpeechPromise;\r\n        console.log(res);\r\n        setSpeechRes(res);\r\n        setListening(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Backdrop className={classes.backdrop} open={listening}>\r\n                <Typography variant=\"h1\" color=\"textPrimary\">\r\n                    Listening...\r\n                </Typography>\r\n            </Backdrop>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    Speech Recognition:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Record\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Record\"\r\n                        onClick={speechToText}\r\n                    >\r\n                        <MicIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">{speechRes}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { RecordVoiceOver as RecordVoiceOverIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [speaking, setSpeaking] = useState(false);\r\n    const [text, setText] = useState();\r\n\r\n    const handleTextChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const textToSpeech = () => {\r\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\r\n            \"c87e54e21af94db4bbf766eec411f251\",\r\n            \"eastus\"\r\n        );\r\n        const audioConfig = sdk.AudioConfig.fromDefaultSpeakerOutput();\r\n        const synthesizer = new sdk.SpeechSynthesizer(\r\n            speechConfig,\r\n            audioConfig\r\n        );\r\n        synthesizer.speakSsmlAsync(\r\n            `<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\r\n            xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"zh-CN\">\r\n          <voice name=\"en-US-AriaNeural\">\r\n            <mstts:express-as style=\"customerservice\">\r\n              ${text}\r\n            </mstts:express-as>\r\n          </voice>\r\n        </speak>`,\r\n            (result) => {\r\n                setSpeaking(true);\r\n                if (result) {\r\n                    console.log(JSON.stringify(result));\r\n                }\r\n                synthesizer.close();\r\n                setTimeout(() => {\r\n                    setSpeaking(false);\r\n                }, 5000);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                synthesizer.close();\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Backdrop className={classes.backdrop} open={speaking}>\r\n                <Typography variant=\"h1\" color=\"textPrimary\">\r\n                    Speaking...\r\n                </Typography>\r\n            </Backdrop>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    Text to Speech:\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    label=\"Enter Text Here\"\r\n                    multiline\r\n                    rows={12}\r\n                    variant=\"filled\"\r\n                    onChange={handleTextChange}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Speak\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Speak\"\r\n                        onClick={textToSpeech}\r\n                    >\r\n                        <RecordVoiceOverIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\r\nimport {\r\n    Backdrop,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { MenuOpen as MenuOpenIcon } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: theme.palette.common.black,\r\n    },\r\n    cardRoot: {\r\n        width: 216,\r\n        height: 200,\r\n        overflowX: \"auto\",\r\n    },\r\n    tooltip: {\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const [text, setText] = useState();\r\n    const [intentString, setIntentString] = useState();\r\n\r\n    const handleTextChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const recognizeIntent = () => {\r\n        fetch(\r\n            `https://westus.api.cognitive.microsoft.com/luis/prediction/v3.0/apps/bd2bf039-0fa0-4ca3-839a-4f47053e6fd2/slots/production/predict?subscription-key=a1c2ea07c42a4b528adfc341c38668d9&query=${text}`\r\n        )\r\n            .then((res) => res.json())\r\n            .then((luisRes) => {\r\n                console.log(luisRes);\r\n                setIntentString(`{\r\n    query: \"${luisRes.query}\",\r\n    topScoringIntent: {\r\n        intent: \"${luisRes.prediction.topIntent}\",\r\n        score: \"${\r\n            luisRes.prediction.intents[luisRes.prediction.topIntent].score\r\n        }\",\r\n    },\r\n}`);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    Intent Recognition (Yes or No):\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <TextField\r\n                    label=\"Enter Text Here\"\r\n                    variant=\"filled\"\r\n                    onChange={handleTextChange}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip\r\n                    title=\"Click to Get Intent\"\r\n                    placement=\"right\"\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                >\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"Click to Get Intent\"\r\n                        onClick={recognizeIntent}\r\n                    >\r\n                        <MenuOpenIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Card className={classes.cardRoot}>\r\n                    <CardContent>\r\n                        <pre>\r\n                            <code>{intentString}</code>\r\n                        </pre>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport {\r\n    ArrowBack as ArrowBackIcon,\r\n    OpenInNew as OpenInNewIcon,\r\n} from \"@material-ui/icons\";\r\nimport SpeechRecognition from \"./speechToText\";\r\nimport TextToSpeech from \"./textToSpeech\";\r\nimport IntentRecognition from \"./intentRecognition\";\r\n\r\nexport default (props) => {\r\n    const { setDisplayVideo } = props;\r\n    return (\r\n        <Fragment>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                    <Grid item xs={12} md={4}>\r\n                        <SpeechRecognition />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TextToSpeech />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <IntentRecognition />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n                <Grid container justify=\"center\" spacing={4}>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={<ArrowBackIcon fontSize=\"inherit\" />}\r\n                            size=\"large\"\r\n                            onClick={() => setDisplayVideo(true)}\r\n                        >\r\n                            Back to Video\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\r\n                            onClick={() => {\r\n                                window.open(\"https://www.xyici.com\", \"_blank\");\r\n                            }}\r\n                            size=\"large\"\r\n                        >\r\n                            View the Live Demo\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Button, Grid, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\r\nimport Demo from \"./demo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n    backgroundSm: {\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [displayVideo, setDisplayVideo] = useState(true);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={isSmScreen ? classes.backgroundSm : classes.background}\r\n        >\r\n            <Grid item>\r\n                <Typography variant=\"h4\" color=\"textPrimary\">\r\n                    Intelligent Call Center for Banks, Proof of Concept\r\n                </Typography>\r\n            </Grid>\r\n            {displayVideo ? (\r\n                <Fragment>\r\n                    <Grid item>\r\n                        <iframe\r\n                            width={isSmScreen ? \"100%\" : \"736\"}\r\n                            height={isSmScreen ? \"315\" : \"480\"}\r\n                            src=\"https://www.youtube.com/embed/v6TqeO2SzT0\"\r\n                            frameBorder=\"0\"\r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                            allowFullScreen\r\n                        />\r\n                    </Grid>\r\n                    <Grid item style={{ width: \"100%\" }}>\r\n                        <Grid container justify=\"center\" spacing={4}>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    endIcon={\r\n                                        <OpenInNewIcon fontSize=\"inherit\" />\r\n                                    }\r\n                                    onClick={() => {\r\n                                        window.open(\r\n                                            \"https://youtu.be/v6TqeO2SzT0\",\r\n                                            \"_blank\"\r\n                                        );\r\n                                    }}\r\n                                    size=\"large\"\r\n                                >\r\n                                    View on YouTube\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => setDisplayVideo(false)}\r\n                                >\r\n                                    Try It Yourself!\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fragment>\r\n            ) : (\r\n                <Demo setDisplayVideo={setDisplayVideo} />\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={classes.background}\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" color=\"textPrimary\">\r\n                        ShopNow Ecommerce Platform\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                        Multi-layer Menu:{\" \"}\r\n                    </Typography>\r\n                    <video\r\n                        src=\"https://personalwebsite2.blob.core.windows.net/container/Menu.mp4\"\r\n                        type=\"video/mp4\"\r\n                        autoPlay\r\n                        loop\r\n                        width={isSmScreen ? \"100%\" : 490}\r\n                        muted\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={classes.background}\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                        SMS Template Generator:{\" \"}\r\n                    </Typography>\r\n                    <video\r\n                        src=\"https://personalwebsite2.blob.core.windows.net/container/Template.mp4\"\r\n                        type=\"video/mp4\"\r\n                        autoPlay\r\n                        loop\r\n                        width={isSmScreen ? \"100%\" : 490}\r\n                        muted\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={classes.background}\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                        WeChat Public Account Message Generator:{\" \"}\r\n                    </Typography>\r\n                    <video\r\n                        src=\"https://personalwebsite2.blob.core.windows.net/container/welcome_message.mp4\"\r\n                        type=\"video/mp4\"\r\n                        autoPlay\r\n                        loop\r\n                        width={isSmScreen ? \"100%\" : 490}\r\n                        muted\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                className={classes.background}\r\n            >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                        Marketing Data Visulization:{\" \"}\r\n                    </Typography>\r\n                    <video\r\n                        src=\"https://personalwebsite2.blob.core.windows.net/container/data_visulization.mp4\"\r\n                        type=\"video/mp4\"\r\n                        autoPlay\r\n                        loop\r\n                        width={isSmScreen ? \"100%\" : 490}\r\n                        muted\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Customer Service AI Trainer</h1>\r\n            <p>Demo</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Crawler Manager</h1>\r\n            <p>Demo</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Spelling Bee</h1>\r\n            <p>Demo</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"calc(10px + 2vmin)\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <h1>Get in Touch</h1>\r\n            <p>Contact info</p>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport SideNavigation from \"../../components/sideNav/sideNav\";\r\nimport Introduction from \"../../components/introduction/introduction\";\r\nimport CallCenterDemo from \"../../components/callCenter/callCenter\";\r\nimport ShopNow from \"../../components/shopNow/shopNow\";\r\nimport CsTrainer from \"../../components/csTrainer/csTrainer\";\r\nimport CrawlerManager from \"../../components/crawlerManager/crawlerManager\";\r\nimport SpellingBee from \"../../components/spellingBee/spellingBee\";\r\nimport Contact from \"../../components/contact/contact\";\r\n\r\nconst useStyles = makeStyles({\r\n    mainBackground: {\r\n        backgroundColor: \"#282c34\",\r\n        height: \"100vh\",\r\n        overflowY: \"auto\",\r\n        width: \"100%\",\r\n    },\r\n});\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isBigScreen = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n    const handleScroll = () => {\r\n        const position =\r\n            document.getElementById(\"mainComponent\").scrollTop /\r\n            document.getElementById(\"mainComponent\").scrollHeight;\r\n        setScrollPosition(position);\r\n    };\r\n    console.log(scrollPosition);\r\n\r\n    useEffect(() => {\r\n        document\r\n            .getElementById(\"mainComponent\")\r\n            .addEventListener(\"scroll\", handleScroll, { passive: true });\r\n\r\n        return () => {\r\n            document\r\n                .getElementById(\"mainComponent\")\r\n                .removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    // console.log(scrollPosition);\r\n\r\n    return (\r\n        <Grid container>\r\n            {isBigScreen && (\r\n                <Grid item md={3}>\r\n                    <SideNavigation scrollPosition={scrollPosition} />\r\n                </Grid>\r\n            )}\r\n            <Grid item xs={12} md={9}>\r\n                <div id=\"mainComponent\" className={classes.mainBackground}>\r\n                    <Introduction />\r\n                    <CallCenterDemo />\r\n                    <ShopNow />\r\n                    <CsTrainer />\r\n                    <CrawlerManager />\r\n                    <SpellingBee />\r\n                    <Contact />\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ProjectPage from \"./views/projectPage/projectPage\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n    palette: {\n        background: {\n            default: \"#121212\",\n            level1: \"#212121\",\n            level2: \"#333\",\n            paper: \"#424242\",\n        },\n        common: {\n            black: \"#000\",\n            white: \"#fff\",\n        },\n        primary: {\n            light: \"#80d6ff\",\n            main: \"#42a5f5\",\n            dark: \"#0077c2\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff77a9\",\n            main: \"#ec407a\",\n            dark: \"#b4004e\",\n            contrastText: \"#fff\",\n        },\n        text: {\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\",\n            primary: \"#fff\",\n            secondary: \"rgba(255, 255, 255, 0.7)\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <ProjectPage />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}