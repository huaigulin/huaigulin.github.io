{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/sideNav/sideNav.js","components/introduction/introduction.js","components/callCenter/speechToText.js","components/callCenter/textToSpeech.js","components/callCenter/intentRecognition.js","components/callCenter/demo.js","components/callCenter/callCenter.js","components/shopNow/shopNow.js","components/csTrainer/csTrainer.js","components/crawlerManager/crawlerManager.js","components/spellingBee/hive.js","components/spellingBee/spellingBee.js","components/contact/contact.js","views/projectPage/projectPage.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","sideBackground","backgroundColor","height","color","overflowY","treeItemBoldLabel","fontWeight","palette","common","white","treeItemContent","treeItemLabel","treeItemNestedRoot","marginBottom","marginTop","treeItemRoot","treeViewRoot","padding","treeItemData","nodeId","label","start","end","nestedData","props","scrollPosition","classes","useState","expanded","setExpanded","useEffect","Grid","className","container","direction","justify","alignItems","TreeView","root","defaultCollapseIcon","KeyboardArrowDown","defaultExpandIcon","KeyboardArrowUp","map","row","TreeItem","content","clsx","selected","treeItemSelected","onClick","length","document","getElementById","scrollTo","top","scrollHeight","left","behavior","r","background","display","flexDirection","justifyContent","fontSize","textAlign","spacingSm","paddingLeft","spacing","paddingRight","spacingLg","useTheme","isSmScreen","useMediaQuery","breakpoints","down","style","backdrop","zIndex","drawer","black","cardRoot","width","italic","fontStyle","tooltip","speechRes","setSpeechRes","listening","setListening","speechToText","a","speechConfig","sdk","fromSubscription","audioConfig","fromDefaultMicrophoneInput","recognizer","recognizeSpeechPromise","Promise","resolve","reject","recognizeOnceAsync","result","close","undefined","text","err","console","error","res","log","Backdrop","open","Typography","variant","item","Tooltip","title","placement","IconButton","aria-label","Mic","Card","CardContent","speaking","setSpeaking","setText","TextField","multiline","rows","onChange","event","target","value","fromDefaultSpeakerOutput","synthesizer","speakSsmlAsync","JSON","stringify","setTimeout","RecordVoiceOver","overflowX","intentString","setIntentString","fetch","json","luisRes","query","prediction","topIntent","intents","score","MenuOpen","setDisplayVideo","xs","md","Button","startIcon","ArrowBack","size","endIcon","OpenInNew","window","backgroundSm","paddingTop","paddingBottom","displayVideo","align","marginLeft","marginRight","src","frameBorder","allow","allowFullScreen","Link","rel","href","gutterBottom","type","autoPlay","loop","muted","playsInline","maxHeight","cellFill","cursor","fill","transition","cellLetter","textAnchor","textTransform","pointerEvents","hive","position","transform","hiveCell","outline","sbControls","maxWidth","sbHive","margin","sbHiveInput","letterSpacing","HiveCell","isCenter","tabIndex","letter","setLetter","focus","setFoucs","handleKeyDown","e","code","startsWith","slice","addEventListener","removeEventListener","onFocus","onBlur","autoFocus","border","viewBox","points","stroke","stroke-width","x","y","dy","strokeWidth","x1","y1","x2","y2","attributeName","from","to","dur","repeatCount","Hive","setResult","tooltipOpen","setTooltipOpen","letter1","setLetter1","letter2","setLetter2","letter3","setLetter3","letter4","setLetter4","letter5","setLetter5","letter6","setLetter6","letter7","setLetter7","handleTooltipClose","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","disableFocusListener","disableHoverListener","disableTouchListener","letters","toLowerCase","method","headers","body","centerLetter","response","data","overflow","columnCount","listStyleType","word","index","CardActions","mainBackground","isBigScreen","up","setScrollPosition","handleScroll","scrollTop","passive","id","createMuiTheme","values","sm","lg","xl","default","level1","level2","paper","primary","light","main","dark","contrastText","secondary","disabled","hint","icon","ReactDOM","render","ThemeProvider"],"mappings":"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","file":"static/js/main.de0da958.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { TreeView, TreeItem } from \"@material-ui/lab\";\nimport {\n    KeyboardArrowDown as KeyboardArrowDownIcon,\n    KeyboardArrowUp as KeyboardArrowUpIcon,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    sideBackground: {\n        backgroundColor: \"#121212\",\n        height: \"100vh\",\n        color: \"rgba(255, 255, 255, 0.6)\",\n        overflowY: \"auto\",\n    },\n    treeItemBoldLabel: {\n        fontWeight: \"bold\",\n        color: theme.palette.common.white,\n    },\n    treeItemContent: {\n        \"&:hover\": {\n            color: theme.palette.common.white,\n        },\n        height: \"3.5em\",\n    },\n    treeItemLabel: {\n        backgroundColor: \"#121212 !important\",\n    },\n    treeItemNestedRoot: {\n        marginBottom: 16,\n        marginTop: 16,\n    },\n    treeItemRoot: {\n        marginBottom: 24,\n        \"&:first-child\": {\n            marginTop: 24,\n        },\n    },\n    treeViewRoot: {\n        padding: 24,\n        height: \"fit-content\",\n    },\n}));\n\nconst treeItemData = [\n    { nodeId: \"1\", label: \"Introduction\", start: 0, end: 0.1 },\n    {\n        nodeId: \"expandable\",\n        label: \"Project Showcase\",\n        nestedData: [\n            {\n                nodeId: \"2\",\n                label: \"Intelligent Call Center for Banks, Proof of Concept\",\n                start: 0.1,\n                end: 0.2,\n            },\n            {\n                nodeId: \"3\",\n                label: \"ShopNow E-commerce Platform\",\n                start: 0.2,\n                end: 0.6,\n            },\n            {\n                nodeId: \"4\",\n                label: \"Customer Service AI Trainer\",\n                start: 0.6,\n                end: 0.7,\n            },\n            { nodeId: \"5\", label: \"Crawler Manager\", start: 0.7, end: 0.8 },\n            { nodeId: \"6\", label: \"Spelling Bee Solver\", start: 0.8, end: 0.9 },\n        ],\n    },\n    { nodeId: \"7\", label: \"Get in Touch\", start: 0.9, end: 1 },\n];\n\nexport default (props) => {\n    const { scrollPosition } = props;\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState([]);\n\n    useEffect(() => {\n        if (scrollPosition > 0.5 / 10) setExpanded([\"expandable\"]);\n    }, [scrollPosition]);\n\n    return (\n        <Grid\n            className={classes.sideBackground}\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n        >\n            <TreeView\n                classes={{ root: classes.treeViewRoot }}\n                defaultCollapseIcon={<KeyboardArrowDownIcon />}\n                defaultExpandIcon={<KeyboardArrowUpIcon />}\n                expanded={expanded}\n            >\n                {treeItemData.map((row) => (\n                    <TreeItem\n                        key={row.nodeId}\n                        nodeId={row.nodeId}\n                        label={row.label}\n                        classes={{\n                            root: classes.treeItemRoot,\n                            content: classes.treeItemContent,\n                            label: clsx({\n                                [classes.treeItemLabel]: true,\n                                [classes.treeItemBoldLabel]:\n                                    scrollPosition > row.start - 0.05 &&\n                                    scrollPosition <= row.end - 0.05,\n                            }),\n                            selected: classes.treeItemSelected,\n                        }}\n                        onClick={() => {\n                            if (!row.nestedData) {\n                                document\n                                    .getElementById(\"mainComponent\")\n                                    .scrollTo({\n                                        top:\n                                            row.start *\n                                            document.getElementById(\n                                                \"mainComponent\"\n                                            ).scrollHeight,\n                                        left: 0,\n                                        behavior: \"smooth\",\n                                    });\n                            } else {\n                                setExpanded((expanded) => {\n                                    if (expanded.length > 0) {\n                                        return [];\n                                    } else {\n                                        return [\"expandable\"];\n                                    }\n                                });\n                            }\n                        }}\n                    >\n                        {row.nestedData &&\n                            row.nestedData.map((r) => (\n                                <TreeItem\n                                    key={r.nodeId}\n                                    classes={{\n                                        root: classes.treeItemNestedRoot,\n                                        content: classes.treeItemContent,\n                                        label: clsx({\n                                            [classes.treeItemLabel]: true,\n                                            [classes.treeItemBoldLabel]:\n                                                scrollPosition >\n                                                    r.start - 0.05 &&\n                                                scrollPosition <= r.end - 0.05,\n                                        }),\n                                        selected: classes.treeItemSelected,\n                                    }}\n                                    nodeId={r.nodeId}\n                                    label={r.label}\n                                    onClick={() => {\n                                        document\n                                            .getElementById(\"mainComponent\")\n                                            .scrollTo({\n                                                top:\n                                                    r.start *\n                                                    document.getElementById(\n                                                        \"mainComponent\"\n                                                    ).scrollHeight,\n                                                left: 0,\n                                                behavior: \"smooth\",\n                                            });\n                                    }}\n                                />\n                            ))}\n                    </TreeItem>\n                ))}\n            </TreeView>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Typography, useMediaQuery } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"calc(10px + 2vmin)\",\n        color: theme.palette.common.white,\n        textAlign: \"center\",\n    },\n    spacingSm: {\n        paddingLeft: theme.spacing(4),\n        paddingRight: theme.spacing(4),\n    },\n    spacingLg: {\n        paddingLeft: theme.spacing(12),\n        paddingRight: theme.spacing(12),\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <div\n            className={clsx({\n                [classes.background]: true,\n                [classes.spacingSm]: isSmScreen,\n                [classes.spacingLg]: !isSmScreen,\n            })}\n        >\n            <h1>Huaigu Lin</h1>\n            <h3>\n                <i>Not your ordinary full-stack engineer.</i>\n            </h3>\n            <p>\n                I write frontend, backend and mobile applications with React,\n                Node.js, Java and SQL.\n            </p>\n            <p>\n                More importantly, I'm a strong problem-solver who cares about\n                user experience and design.\n            </p>\n            <p style={{ display: \"flex\", alignItems: \"center\" }}>\n                | <ArrowDownwardIcon fontSize=\"inherit\" /> Scroll down to see\n                sample projects |\n            </p>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Card,\n    CardContent,\n    Grid,\n    IconButton,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { Mic as MicIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    cardRoot: {\n        width: 200,\n        height: 272,\n        overflowY: \"auto\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [speechRes, setSpeechRes] = useState();\n    const [listening, setListening] = useState(false);\n\n    const speechToText = async () => {\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\n            \"c87e54e21af94db4bbf766eec411f251\",\n            \"eastus\"\n        );\n        const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\n        const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\n        setListening(true);\n        const recognizeSpeechPromise = new Promise((resolve, reject) => {\n            recognizer.recognizeOnceAsync(\n                (result) => {\n                    recognizer.close();\n                    if (result.text === undefined) {\n                        reject(\"error in speech recognition\");\n                    }\n                    resolve(result.text);\n                },\n                (err) => {\n                    recognizer.close();\n                    console.error(err);\n                }\n            );\n        });\n        const res = await recognizeSpeechPromise;\n        console.log(res);\n        setSpeechRes(res);\n        setListening(false);\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Backdrop className={classes.backdrop} open={listening}>\n                <Typography variant=\"h1\" color=\"textPrimary\">\n                    Listening...\n                </Typography>\n            </Backdrop>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Speech Recognition:\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Record\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Record\"\n                        onClick={speechToText}\n                    >\n                        <MicIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <Card className={classes.cardRoot}>\n                    <CardContent>\n                        <Typography variant=\"body1\">{speechRes}</Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { RecordVoiceOver as RecordVoiceOverIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [speaking, setSpeaking] = useState(false);\n    const [text, setText] = useState();\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const textToSpeech = () => {\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\n            \"c87e54e21af94db4bbf766eec411f251\",\n            \"eastus\"\n        );\n        const audioConfig = sdk.AudioConfig.fromDefaultSpeakerOutput();\n        const synthesizer = new sdk.SpeechSynthesizer(\n            speechConfig,\n            audioConfig\n        );\n        synthesizer.speakSsmlAsync(\n            `<speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\"\n            xmlns:mstts=\"https://www.w3.org/2001/mstts\" xml:lang=\"zh-CN\">\n          <voice name=\"en-US-AriaNeural\">\n            <mstts:express-as style=\"customerservice\">\n              ${text}\n            </mstts:express-as>\n          </voice>\n        </speak>`,\n            (result) => {\n                setSpeaking(true);\n                if (result) {\n                    console.log(JSON.stringify(result));\n                }\n                synthesizer.close();\n                setTimeout(() => {\n                    setSpeaking(false);\n                }, 5000);\n            },\n            (error) => {\n                console.log(error);\n                synthesizer.close();\n            }\n        );\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Backdrop className={classes.backdrop} open={speaking}>\n                <Typography variant=\"h1\" color=\"textPrimary\">\n                    Speaking...\n                </Typography>\n            </Backdrop>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Text to Speech:\n                </Typography>\n            </Grid>\n            <Grid item>\n                <TextField\n                    label=\"Enter Text Here\"\n                    multiline\n                    rows={12}\n                    variant=\"filled\"\n                    onChange={handleTextChange}\n                />\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Speak\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Speak\"\n                        onClick={textToSpeech}\n                    >\n                        <RecordVoiceOverIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport {\n    Backdrop,\n    Card,\n    CardContent,\n    Grid,\n    IconButton,\n    TextField,\n    Tooltip,\n    Typography,\n} from \"@material-ui/core\";\nimport { MenuOpen as MenuOpenIcon } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: theme.palette.common.black,\n    },\n    cardRoot: {\n        width: 216,\n        height: 200,\n        overflowX: \"auto\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nexport default (props) => {\n    const classes = useStyles();\n    const [text, setText] = useState();\n    const [intentString, setIntentString] = useState();\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    };\n\n    const recognizeIntent = () => {\n        fetch(\n            `https://westus.api.cognitive.microsoft.com/luis/prediction/v3.0/apps/bd2bf039-0fa0-4ca3-839a-4f47053e6fd2/slots/production/predict?subscription-key=a1c2ea07c42a4b528adfc341c38668d9&query=${text}`\n        )\n            .then((res) => res.json())\n            .then((luisRes) => {\n                console.log(luisRes);\n                setIntentString(`{\n    query: \"${luisRes.query}\",\n    topScoringIntent: {\n        intent: \"${luisRes.prediction.topIntent}\",\n        score: \"${\n            luisRes.prediction.intents[luisRes.prediction.topIntent].score\n        }\",\n    },\n}`);\n            });\n    };\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textPrimary\"\n                    className={classes.italic}\n                >\n                    Intent Recognition (Yes or No):\n                </Typography>\n            </Grid>\n            <Grid item>\n                <TextField\n                    label=\"Enter Text Here\"\n                    variant=\"filled\"\n                    onChange={handleTextChange}\n                />\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title=\"Click to Get Intent\"\n                    placement=\"right\"\n                    classes={{ tooltip: classes.tooltip }}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"Click to Get Intent\"\n                        onClick={recognizeIntent}\n                    >\n                        <MenuOpenIcon fontSize=\"large\" />\n                    </IconButton>\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <Card className={classes.cardRoot}>\n                    <CardContent>\n                        <pre>\n                            <code>{intentString}</code>\n                        </pre>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { Fragment } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport {\n    ArrowBack as ArrowBackIcon,\n    OpenInNew as OpenInNewIcon,\n} from \"@material-ui/icons\";\nimport SpeechRecognition from \"./speechToText\";\nimport TextToSpeech from \"./textToSpeech\";\nimport IntentRecognition from \"./intentRecognition\";\n\nexport default (props) => {\n    const { setDisplayVideo } = props;\n    return (\n        <Fragment>\n            <Grid item style={{ width: \"100%\" }}>\n                <Grid container justify=\"center\" spacing={2}>\n                    <Grid item xs={12} md={4}>\n                        <SpeechRecognition />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <TextToSpeech />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <IntentRecognition />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n                <Grid container justify=\"center\" spacing={4}>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<ArrowBackIcon fontSize=\"inherit\" />}\n                            size=\"large\"\n                            onClick={() => setDisplayVideo(true)}\n                        >\n                            Back to Video\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\n                            onClick={() => {\n                                window.open(\"https://www.xyici.com\", \"_blank\");\n                            }}\n                            size=\"large\"\n                        >\n                            View the Live Demo\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n};\n","import React, { useState, Fragment } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Grid,\n    Icon,\n    Link,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\nimport Demo from \"./demo\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [displayVideo, setDisplayVideo] = useState(true);\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\n                >\n                    <b>Intelligent Call Center for Banks, Proof of Concept</b>\n                </Typography>\n            </Grid>\n            {displayVideo ? (\n                <Fragment>\n                    <Grid item>\n                        <Grid container spacing={4} alignItems=\"center\">\n                            <Grid item xs={12} md={6}>\n                                <iframe\n                                    style={\n                                        isSmScreen\n                                            ? { marginLeft: 8, marginRight: 8 }\n                                            : { marginLeft: 16 }\n                                    }\n                                    width=\"100%\"\n                                    height={isSmScreen ? \"315\" : \"480\"}\n                                    src=\"https://www.youtube.com/embed/v6TqeO2SzT0\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    align=\"center\"\n                                    style={\n                                        isSmScreen\n                                            ? { marginLeft: 8, marginRight: 8 }\n                                            : { marginRight: 16 }\n                                    }\n                                >\n                                    <b>\n                                        Using <i>speech recognition</i>,{\" \"}\n                                        <i>text to speech</i>,{\" \"}\n                                        <i>intent recognition</i> and{\" \"}\n                                        <i>frontend animation</i> to showcase\n                                        the company's technical expertise in\n                                        building an intelligent call center\n                                    </b>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Type of Work: <i>professional</i>,{\" \"}\n                                    <i>independent</i>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Icons:{\" \"}\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://streamlineicons.com/\"\n                                        color=\"textSecondary\"\n                                    >\n                                        Streamline Icons\n                                        <OpenInNewIcon\n                                            color=\"inherit\"\n                                            fontSize=\"inherit\"\n                                        />\n                                    </Link>\n                                </Typography>\n                                <br />\n                                <Typography color=\"textPrimary\" align=\"center\">\n                                    Speech Services:{\" \"}\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://azure.microsoft.com/en-us/services/cognitive-services/speech-services/\"\n                                        color=\"textSecondary\"\n                                    >\n                                        Microsoft Azure\n                                        <OpenInNewIcon\n                                            color=\"inherit\"\n                                            fontSize=\"inherit\"\n                                        />\n                                    </Link>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item style={{ width: \"100%\" }}>\n                        <Grid container justify=\"center\" spacing={4}>\n                            <Grid item>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    endIcon={\n                                        <OpenInNewIcon fontSize=\"inherit\" />\n                                    }\n                                    onClick={() => {\n                                        window.open(\n                                            \"https://youtu.be/v6TqeO2SzT0\",\n                                            \"_blank\"\n                                        );\n                                    }}\n                                    size=\"large\"\n                                >\n                                    View on YouTube\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    size=\"large\"\n                                    onClick={() => setDisplayVideo(false)}\n                                >\n                                    Try It Yourself!\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Fragment>\n            ) : (\n                <Demo setDisplayVideo={setDisplayVideo} />\n            )}\n        </Grid>\n    );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n    italic: {\n        fontStyle: \"italic\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Fragment>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                        <b>ShopNow E-commerce Platform</b>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                <b>\n                                    A one-stop platform solution that helps\n                                    international businesses launch and manage\n                                    e-commerce activities in the Chinese market\n                                </b>\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Type of Work: <i>professional</i>, <i>team</i>\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Designer: Felix Wang\n                            </Typography>\n                            <br />\n                            <Typography color=\"textPrimary\" align=\"center\">\n                                Co-developer: Chenjie Wang\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : {}\n                                }\n                            >\n                                Multi-layer Menu:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/Menu.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : {}\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                SMS Template Generator:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/Template.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                This form contains many tools that help users\n                                easily generate SMS marketing contents that\n                                follow regulators' rules\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                SUBMIT button submits the template application\n                                to multiple SMS service providers and redirects\n                                to an application status page, where user can\n                                monitor the status of the application\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                WeChat Public Account Message Generator:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/welcome_message.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                WeChat Public Account is an import eCommerce\n                                marketing channel in the Chinese market\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                This form helps users generate WeChat Public\n                                Account messages with materials they uploaded\n                            </Typography>\n                            <br />\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                Users can choose many content types, as well as\n                                visualize the message simultaneously when they\n                                are filling out the form\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                className={\n                    isSmScreen ? classes.backgroundSm : classes.background\n                }\n            >\n                <Grid item>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item xs={12} md={7}>\n                            <Typography\n                                variant=\"h6\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                                className={classes.italic}\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            >\n                                Sales and Marketing Data Visulization:{\" \"}\n                            </Typography>\n                            <video\n                                src=\"https://personalwebsite2.blob.core.windows.net/container/data_visulization.mp4\"\n                                type=\"video/mp4\"\n                                autoPlay\n                                loop\n                                width=\"100%\"\n                                muted\n                                playsInline\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginLeft: 16 }\n                                }\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={5}>\n                            <Typography\n                                color=\"textPrimary\"\n                                align=\"center\"\n                                style={\n                                    isSmScreen\n                                        ? { marginLeft: 8, marginRight: 8 }\n                                        : { marginRight: 16 }\n                                }\n                            >\n                                Charts, tables and cards that help users track\n                                sales data and monitor effectiveness of\n                                marketing campaigns\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Fragment>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Link, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                    <b>Customer Service AI Trainer</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={4}>\n                        <video\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/customer_service_ai_trainer_demo.mp4\"\n                            type=\"video/mp4\"\n                            autoPlay\n                            loop\n                            width=\"100%\"\n                            muted\n                            playsInline\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16, maxHeight: 540 }\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>\n                                An Android native APP that trains customer\n                                service how to talk to customers.{\" \"}\n                                <i>Speech recognition</i> is used to recognize\n                                users' voice. A custom <i>NLP module</i> is used\n                                to mimic customers' questions, score customer\n                                services' answers and give out standard answers\n                            </b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>professional</i>,{\" \"}\n                            <i>independent</i>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Speech Recognition:{\" \"}\n                            <Link\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                href=\"https://www.xfyun.cn/services/voicedictation\"\n                                color=\"textSecondary\"\n                            >\n                                Xunfei Cloud\n                                <OpenInNewIcon\n                                    color=\"inherit\"\n                                    fontSize=\"inherit\"\n                                />\n                            </Link>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            NLP Module: Zhijue Information\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n                    <b>Crawler Manager</b>\n                </Typography>\n            </Grid>\n            <Grid item>\n                <Grid container spacing={4} alignItems=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <video\n                            src=\"https://personalwebsite2.blob.core.windows.net/container/crawler_manager.mp4\"\n                            type=\"video/mp4\"\n                            autoPlay\n                            loop\n                            width=\"100%\"\n                            muted\n                            playsInline\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginLeft: 16 }\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Typography\n                            color=\"textPrimary\"\n                            align=\"center\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : { marginRight: 16 }\n                            }\n                        >\n                            <b>\n                                A company internal tool to help users launch and\n                                monitor crawler tasks without any programming\n                            </b>\n                        </Typography>\n                        <br />\n                        <Typography color=\"textPrimary\" align=\"center\">\n                            Type of Work: <i>professional</i>,{\" \"}\n                            <i>independent</i>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState, useEffect, Fragment, useRef } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    ClickAwayListener,\n    Grid,\n    Tooltip,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    cellFill: {\n        cursor: \"pointer\",\n        fill: \"#e6e6e6\",\n        transition: \"all 100ms\",\n    },\n    cellLetter: {\n        fontWeight: 700,\n        fontSize: 30,\n        textAnchor: \"middle\",\n        textTransform: \"uppercase\",\n        pointerEvents: \"none\",\n    },\n    hive: {\n        position: \"relative\",\n        width: \"100%\",\n        paddingBottom: \"103.92305%\",\n        \"& div:nth-child(1)\": {\n            transform: \"translate(0, 0)\",\n            \"& polygon\": {\n                fill: \"#f8cd05\",\n            },\n        },\n        \"& div:nth-child(2)\": {\n            transform: \"translate(-75%, -50%)\",\n        },\n        \"& div:nth-child(3)\": {\n            transform: \"translate(0, -100%)\",\n        },\n        \"& div:nth-child(4)\": {\n            transform: \"translate(75%, -50%)\",\n        },\n        \"& div:nth-child(5)\": {\n            transform: \"translate(75%, 50%)\",\n        },\n        \"& div:nth-child(6)\": {\n            transform: \"translate(0, 100%)\",\n        },\n        \"& div:nth-child(7)\": {\n            transform: \"translate(-75%, 50%)\",\n        },\n    },\n    hiveCell: {\n        position: \"absolute\",\n        top: \"calc(100% / 3)\",\n        left: \"30%\",\n        width: \"40%\",\n        height: \"calc(100% / 3)\",\n        outline: \"none\",\n    },\n    sbControls: {\n        width: \"90vw\",\n        maxWidth: 290,\n    },\n    sbHive: {\n        width: \"90%\",\n        margin: \"25px auto\",\n    },\n    sbHiveInput: {\n        textTransform: \"uppercase\",\n        fontSize: 32,\n        fontWeight: 700,\n        letterSpacing: 0.5,\n        color: theme.palette.common.white,\n    },\n    tooltip: {\n        fontSize: 16,\n    },\n}));\n\nconst HiveCell = (props) => {\n    const classes = useStyles();\n    const { className, isCenter, tabIndex, letter, setLetter } = props;\n    const [focus, setFoucs] = useState(false);\n\n    useEffect(() => {\n        if (focus) {\n            const handleKeyDown = (e) => {\n                if (e.code.startsWith(\"Key\")) {\n                    setLetter(e.code.slice(3));\n                } else if (e.code === \"Backspace\") {\n                    setLetter(null);\n                }\n            };\n            document.addEventListener(\"keydown\", handleKeyDown);\n\n            return function cleanup() {\n                document.removeEventListener(\"keydown\", handleKeyDown);\n            };\n        }\n    }, [focus]);\n\n    return (\n        <div\n            onFocus={() => {\n                setFoucs(true);\n            }}\n            onBlur={() => {\n                setFoucs(false);\n            }}\n            className={classes.hiveCell}\n            tabIndex={tabIndex}\n        >\n            {focus && (\n                <input\n                    type=\"text\"\n                    autoFocus\n                    style={{\n                        position: \"absolute\",\n                        height: 0,\n                        padding: \"unset\",\n                        margin: \"unset\",\n                        border: \"none\",\n                    }}\n                />\n            )}\n            <svg viewBox=\"0 0 120 103.92304845413263\">\n                <polygon\n                    className={classes.cellFill}\n                    points=\"0,51.96152422706631 30,0 90,0 120,51.96152422706631 90,103.92304845413263 30,103.92304845413263\"\n                    stroke=\"#282c34\"\n                    stroke-width=\"7.5\"\n                />\n                <text\n                    className={classes.cellLetter}\n                    x=\"50%\"\n                    y=\"50%\"\n                    dy=\"10.75%\"\n                >\n                    {letter}\n                </text>\n                {focus && (\n                    <line\n                        strokeWidth=\"3\"\n                        x1={letter ? \"75\" : \"50\"}\n                        y1=\"25\"\n                        x2={letter ? \"75\" : \"50\"}\n                        y2=\"75\"\n                        stroke={isCenter ? \"black\" : \"#f8cd05\"}\n                    >\n                        <animate\n                            attributeName=\"display\"\n                            from=\"block\"\n                            to=\"none\"\n                            dur=\"1s\"\n                            repeatCount=\"indefinite\"\n                        />\n                    </line>\n                )}\n            </svg>\n        </div>\n    );\n};\n\nconst Hive = (props) => {\n    const { setResult } = props;\n    const classes = useStyles();\n    const [tooltipOpen, setTooltipOpen] = useState(false);\n    const [letter1, setLetter1] = useState(null);\n    const [letter2, setLetter2] = useState(null);\n    const [letter3, setLetter3] = useState(null);\n    const [letter4, setLetter4] = useState(null);\n    const [letter5, setLetter5] = useState(null);\n    const [letter6, setLetter6] = useState(null);\n    const [letter7, setLetter7] = useState(null);\n\n    const handleTooltipClose = () => {\n        setTooltipOpen(false);\n    };\n\n    const handleTooltipOpen = () => {\n        setTooltipOpen(true);\n    };\n\n    return (\n        <Grid\n            container\n            // direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.sbControls}\n            spacing={2}\n        >\n            <Grid item xs={12} className={classes.sbHive}>\n                <div className={classes.hive}>\n                    <HiveCell\n                        isCenter\n                        tabIndex=\"1\"\n                        letter={letter1}\n                        setLetter={setLetter1}\n                    />\n                    <HiveCell\n                        tabIndex=\"2\"\n                        letter={letter2}\n                        setLetter={setLetter2}\n                    />\n                    <HiveCell\n                        tabIndex=\"3\"\n                        letter={letter3}\n                        setLetter={setLetter3}\n                    />\n                    <HiveCell\n                        tabIndex=\"4\"\n                        letter={letter4}\n                        setLetter={setLetter4}\n                    />\n                    <HiveCell\n                        tabIndex=\"5\"\n                        letter={letter5}\n                        setLetter={setLetter5}\n                    />\n                    <HiveCell\n                        tabIndex=\"6\"\n                        letter={letter6}\n                        setLetter={setLetter6}\n                    />\n                    <HiveCell\n                        tabIndex=\"7\"\n                        letter={letter7}\n                        setLetter={setLetter7}\n                    />\n                </div>\n            </Grid>\n            <Grid\n                item\n                xs={12}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n                <ClickAwayListener onClickAway={handleTooltipClose}>\n                    <Tooltip\n                        PopperProps={{\n                            disablePortal: true,\n                        }}\n                        onClose={handleTooltipClose}\n                        open={tooltipOpen}\n                        disableFocusListener\n                        disableHoverListener\n                        disableTouchListener\n                        title=\"Oops! Fill out all letters first...\"\n                        placement=\"top\"\n                        classes={{ tooltip: classes.tooltip }}\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={() => {\n                                if (\n                                    !letter1 ||\n                                    !letter2 ||\n                                    !letter3 ||\n                                    !letter4 ||\n                                    !letter5 ||\n                                    !letter6 ||\n                                    !letter7\n                                ) {\n                                    handleTooltipOpen();\n                                } else {\n                                    let letters =\n                                        letter1 +\n                                        letter2 +\n                                        letter3 +\n                                        letter4 +\n                                        letter5 +\n                                        letter6 +\n                                        letter7;\n                                    letters = letters.toLowerCase();\n                                    fetch(\n                                        \"http://20.185.23.11:8080/findWords\",\n                                        {\n                                            method: \"POST\",\n                                            headers: {\n                                                \"Content-Type\":\n                                                    \"application/json\",\n                                            },\n                                            body: JSON.stringify({\n                                                letters: letters,\n                                                centerLetter: letter1.toLowerCase(),\n                                            }),\n                                        }\n                                    )\n                                        .then((response) => response.json())\n                                        .then((data) => setResult(data));\n                                }\n                            }}\n                        >\n                            let me solve it for you!\n                        </Button>\n                    </Tooltip>\n                </ClickAwayListener>\n            </Grid>\n            <Grid item xs={12}>\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    endIcon={<OpenInNewIcon fontSize=\"inherit\" />}\n                    onClick={() => {\n                        window.open(\n                            \"https://www.nytimes.com/puzzles/spelling-bee\",\n                            \"_blank\"\n                        );\n                    }}\n                    size=\"large\"\n                >\n                    check new york times for today's puzzle\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Hive;\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Grid,\n    Typography,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport Hive from \"./hive\";\nimport { OpenInNew as OpenInNewIcon } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        height: \"100vh\",\n        width: \"100%\",\n    },\n    backgroundSm: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n        width: \"100%\",\n    },\n    cardRoot: {\n        width: \"100%\",\n        height: \"70vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isSmScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const [result, setResult] = useState([]);\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            className={isSmScreen ? classes.backgroundSm : classes.background}\n        >\n            <Grid item>\n                <Typography\n                    variant=\"h5\"\n                    color=\"textPrimary\"\n                    align=\"center\"\n                    style={isSmScreen ? { marginLeft: 8, marginRight: 8 } : {}}\n                >\n                    <b>New York Times Spelling Bee Solver</b>\n                </Typography>\n            </Grid>\n            <Grid item style={{ width: \"100%\" }}>\n                <Grid\n                    container\n                    spacing={4}\n                    alignItems=\"center\"\n                    justify=\"center\"\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        md={6}\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                    >\n                        <Hive setResult={setResult} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Card\n                            className={classes.cardRoot}\n                            variant=\"outlined\"\n                            style={\n                                isSmScreen\n                                    ? { marginLeft: 8, marginRight: 8 }\n                                    : {}\n                            }\n                        >\n                            <CardContent style={{ height: \"80%\" }}>\n                                <Typography\n                                    className={classes.title}\n                                    color=\"textSecondary\"\n                                    gutterBottom\n                                >\n                                    I have found {result.length} word for you\n                                </Typography>\n                                <div\n                                    style={{\n                                        height: \"100%\",\n                                        overflow: \"auto\",\n                                    }}\n                                >\n                                    <ul\n                                        style={{\n                                            columnCount: 3,\n                                            listStyleType: \"none\",\n                                        }}\n                                    >\n                                        {result.length > 0 &&\n                                            result.map((word, index) => (\n                                                <li key={index}>\n                                                    <Typography variant=\"body1\">\n                                                        {word}\n                                                    </Typography>\n                                                </li>\n                                            ))}\n                                    </ul>\n                                </div>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    endIcon={\n                                        <OpenInNewIcon fontSize=\"inherit\" />\n                                    }\n                                    onClick={() => {\n                                        window.open(\n                                            \"https://github.com/huaigulin/NYTimes_Spelling_Bee_Solver\",\n                                            \"_blank\"\n                                        );\n                                    }}\n                                >\n                                    check my algorithm\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n","import React, { useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    background: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"calc(10px + 2vmin)\",\n        color: \"white\",\n    },\n});\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.background}>\n            <h1>Get in Touch</h1>\n            <p>Contact info (Waiting to update)</p>\n        </div>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport SideNavigation from \"../../components/sideNav/sideNav\";\nimport Introduction from \"../../components/introduction/introduction\";\nimport CallCenterDemo from \"../../components/callCenter/callCenter\";\nimport ShopNow from \"../../components/shopNow/shopNow\";\nimport CsTrainer from \"../../components/csTrainer/csTrainer\";\nimport CrawlerManager from \"../../components/crawlerManager/crawlerManager\";\nimport SpellingBee from \"../../components/spellingBee/spellingBee\";\nimport Contact from \"../../components/contact/contact\";\n\nconst useStyles = makeStyles({\n    mainBackground: {\n        backgroundColor: \"#282c34\",\n        height: \"100vh\",\n        overflowY: \"auto\",\n        width: \"100%\",\n    },\n});\n\nexport default () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isBigScreen = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const handleScroll = () => {\n        const position =\n            document.getElementById(\"mainComponent\").scrollTop /\n            document.getElementById(\"mainComponent\").scrollHeight;\n        setScrollPosition(position);\n    };\n    console.log(scrollPosition);\n\n    useEffect(() => {\n        document\n            .getElementById(\"mainComponent\")\n            .addEventListener(\"scroll\", handleScroll, { passive: true });\n\n        return () => {\n            document\n                .getElementById(\"mainComponent\")\n                .removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    // console.log(scrollPosition);\n\n    return (\n        <Grid container>\n            {isBigScreen && (\n                <Grid item md={3}>\n                    <SideNavigation scrollPosition={scrollPosition} />\n                </Grid>\n            )}\n            <Grid item xs={12} md={9}>\n                <div id=\"mainComponent\" className={classes.mainBackground}>\n                    <Introduction />\n                    <CallCenterDemo />\n                    <ShopNow />\n                    <CsTrainer />\n                    <CrawlerManager />\n                    <SpellingBee />\n                    <Contact />\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ProjectPage from \"./views/projectPage/projectPage\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n        },\n    },\n    palette: {\n        background: {\n            default: \"#121212\",\n            level1: \"#212121\",\n            level2: \"#333\",\n            paper: \"#424242\",\n        },\n        common: {\n            black: \"#000\",\n            white: \"#fff\",\n        },\n        primary: {\n            light: \"#80d6ff\",\n            main: \"#42a5f5\",\n            dark: \"#0077c2\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            light: \"#ff77a9\",\n            main: \"#ec407a\",\n            dark: \"#b4004e\",\n            contrastText: \"#fff\",\n        },\n        text: {\n            disabled: \"rgba(255, 255, 255, 0.5)\",\n            hint: \"rgba(255, 255, 255, 0.5)\",\n            icon: \"rgba(255, 255, 255, 0.5)\",\n            primary: \"#fff\",\n            secondary: \"rgba(255, 255, 255, 0.7)\",\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <ProjectPage />\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}